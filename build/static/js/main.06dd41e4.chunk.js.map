{"version":3,"sources":["utils/functions.ts","components/TimePreview.tsx","components/SeekPreview.tsx","components/VideoProgress.tsx","components/VideoControlButton.tsx","components/VolumeControl.tsx","components/SettingsControl.tsx","components/FullscreenControl.tsx","components/PlaybackControl.tsx","components/VideoClickFeedback.tsx","components/ElapsedTime.tsx","components/VideoControls.tsx","store/VideoStore.ts","components/VideoPlayer.tsx","App.tsx","theme.ts","index.tsx"],"names":["formatSecondsToTimeDuration","value","hours","Math","floor","minutes","seconds","hoursText","minutesSecondsText","toString","padStart","delayMsAsync","ms","Promise","resolve","setTimeout","observer","videoStore","React","VideoPlayerContext","Box","display","position","top","bgcolor","paddingX","borderRadius","left","seekHoverPositionPercentClamped","visibility","previewPeekIsActive","Typography","variant","color","seekHoverPositionSeconds","height","zIndex","width","seekHoverPositionPercent","style","transform","fullscreenIsActive","transformOrigin","getProgressScale","inputs","previewEnabled","useProgressStyles","makeStyles","root","alignItems","padding","thumb","boxShadow","marginTop","opacity","active","track","pointerEvents","rail","backgroundColor","progressStyleInputs","progressClasses","marginX","Slider","onMouseMove","handlePreviewSeek","onMouseLeave","cancelPreviewSeek","onMouseEnter","startPreviewSeek","onChange","handleSeek","onChangeCommitted","classes","min","step","max","durationSeconds","valueLabelDisplay","getAriaValueText","aria-label","currentPositionSeconds","useControlStyles","VideoControlButton","children","onClick","otherProps","IconButton","disableFocusRipple","disableRipple","only","useSliderStyles","theme","margin","spacing","transition","sliderStylesInputs","sliderClasses","sliderMaxWidth","sliderDisplayWidth","pointerIsHovering","handleVolumeOnHover","edge","toggleVolume","volumeLevel","volumeIsMuted","overflow","handleVolumeChange","useMenuStyles","paper","maxHeight","palette","common","white","useIconStyles","marginRight","playbackSpeeds","anchorOrigin","vertical","horizontal","listItemTypographyVariant","opacityOnStyle","opacityOffStyle","aboveControlsRef","popupState","usePopupState","popupId","selectedItemIndex","setSelectedItemIndex","clampedMinMaxAvailableContainerHeight","clampedMaxAvailableContainerHeight","clientHeight","menuStylesInput","menuClasses","iconClasses","setAnchorEl","makeOnMenuItemClick","speed","index","event","handlePlaybackSpeedChange","close","bindToggle","Menu","bindMenu","getContentAnchorEl","disablePortal","keepMounted","MenuItem","divider","ListItemText","primaryTypographyProps","primary","map","textContent","isSelected","itemOnClick","handleFullscreen","fontSize","handlePlayPause","videoIsPlaying","useFeedbackStyles","actionAnimationStart","actionRestState","videoClickAnimationDisplaying","FeedbackIconType","PlayCircleFilledIcon","PauseCircleFilledIcon","justifyContent","seekIsPending","useTextStyles","lineHeight","textClasses","paddingTop","useVideoStyles","controlsAndProgress","background","controlsAndProgressActive","controlsAndProgressIdle","cursorOn","cursor","cursorOff","pendingControlHideHandler","setAboveControlsRef","activateControlsHandler","current","cancel","pendingHideHandle","flowResult","setUserAsActive","catch","hideControlsHandler","setUserAsIdle","onTouchMove","onTouchStart","className","userIsIdle","flexDirection","flexGrow","ref","handleVideoClick","marginBottom","handleVolumeOnHoverExit","FullscreenControl","configure","enforceActions","computedRequiresReaction","reactionRequiresObservable","observableRequiresReaction","disableErrorBoundaries","VideoStore","videoElement","videoContainer","videoWasPlayingBeforeSeek","setInitialState","handleVideoClickFlow","bind","setUserAsActiveFlow","setVideoElement","addEventListener","updateDuration","handleEnd","setVideoContainer","fscreen","handleFullscreenChange","cleanUp","removeEventListener","updateTime","currentTime","paused","ended","window","requestAnimationFrame","duration","play","pause","currentTarget","getBoundingClientRect","pageX","newTime","includes","type","isMouseDown","isMouseUp","fullscreenEnabled","fullscreenElement","exitFullscreen","requestFullscreen","document","documentElement","newVolume","Number","isFinite","volume","muted","playbackRate","this","makeAutoObservable","hoverTime","currentTimePercent","hoverPercent","useStyles","video","objectFit","VideoPlayer","posterUrl","manualDownloadUrl","sourceList","videoElementRef","videoContainerRef","videoStoreRef","getStore","border","borderColor","Provider","id","preload","poster","source","url","src","href","App","marginY","process","gutterBottom","createMuiTheme","overrides","MuiCssBaseline","scrollbarColor","main","secondary","error","red","A400","default","ReactDOM","ThemeProvider","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.06dd41e4.chunk.js","sourcesContent":["const formatSecondsToTimeDuration = (value: number): string => {\r\n  if (value < 0 || value >= 24 * 60 * 60) return 'N/A';\r\n\r\n  const hours = Math.floor(value / 60 / 24);\r\n  const minutes = Math.floor(value / 60 % 24);\r\n  const seconds = Math.floor(value % 60);\r\n\r\n  const hoursText = hours ? `${hours}:` : '';\r\n  const minutesSecondsText = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n\r\n  return `${hoursText}${minutesSecondsText}`;\r\n};\r\n\r\nconst delayMsAsync = (ms: number): Promise<number> => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\nconst delayNextFrame = (): Promise<number> => new Promise(window.requestAnimationFrame);\r\n\r\nexport {\r\n  formatSecondsToTimeDuration,\r\n  delayMsAsync,\r\n  delayNextFrame,\r\n};","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { formatSecondsToTimeDuration } from '../utils/functions';\r\nimport { VideoPlayerContext } from './VideoPlayer';\r\n\r\n\r\nconst TimePreview: React.FC<{}> = () => {\r\n  const videoStore = React.useContext(VideoPlayerContext);\r\n  \r\n  return (\r\n    <Box \r\n      display='inline-block'\r\n      position='absolute'\r\n      top='-1.3rem'\r\n      bgcolor={'radial-gradient(#0003} transparent)'}\r\n      paddingX={2}\r\n      borderRadius={100}\r\n      left={`calc(${videoStore.seekHoverPositionPercentClamped}% - 18px)`}\r\n      visibility={videoStore.previewPeekIsActive ? 'visible' : 'hidden'}\r\n    > \r\n      <Typography\r\n        variant=\"body2\" \r\n        color=\"secondary\"\r\n      >\r\n        {formatSecondsToTimeDuration(videoStore.seekHoverPositionSeconds)}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default observer(TimePreview);","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport { VideoPlayerContext } from './VideoPlayer';\r\n\r\n\r\nconst SeekPreview: React.FC<{}> = () => {\r\n  const videoStore = React.useContext(VideoPlayerContext);\r\n\r\n  return (\r\n    <Box \r\n      position=\"absolute\"\r\n      height={`calc(5 / 16 * 100%)`}\r\n      left={0}\r\n      zIndex={-1}\r\n      bgcolor=\"grey.800\"\r\n      width={`${videoStore.seekHoverPositionPercent}%`}\r\n      style={{ \r\n        transform: `scaleY(${videoStore.fullscreenIsActive ? 1.4 : 1})`,\r\n        transformOrigin: 'top',\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default observer(SeekPreview);","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nimport { formatSecondsToTimeDuration } from '../utils/functions';\r\nimport { VideoPlayerContext } from './VideoPlayer';\r\nimport TimePreview from './TimePreview';\r\nimport SeekPreview from './SeekPreview';\r\n\r\n\r\ntype ProgressStyleInputsType = {\r\n  previewEnabled: boolean,\r\n  fullscreenIsActive: boolean,\r\n};\r\n\r\nconst getProgressScale = (inputs: ProgressStyleInputsType): number => {\r\n  const { fullscreenIsActive, previewEnabled } = inputs;\r\n\r\n  const fullscreenScaleModifier = fullscreenIsActive ? 1.4 : 1;\r\n  const hoveredScaleModifier = previewEnabled ? 1 : 0.6;\r\n\r\n  return fullscreenScaleModifier * hoveredScaleModifier;\r\n};\r\n\r\nconst useProgressStyles = makeStyles<Theme, ProgressStyleInputsType>({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    position: 'absolute',\r\n    top: 0,\r\n    padding: 0,\r\n    height: '100%',\r\n    transform: (inputs) => `scaleY(${getProgressScale(inputs)})`,\r\n    transformOrigin: 'center',\r\n  },\r\n  thumb: {\r\n    '&:focus, &:hover, &$active': {\r\n      boxShadow: 'unset',\r\n    },\r\n    marginTop: 'unset',\r\n    transform: (inputs) => `scaleX(${getProgressScale(inputs)})`,\r\n    opacity: ({ previewEnabled }) => previewEnabled ? 1 : 0,\r\n  },\r\n  active: {},\r\n  track: {\r\n    height: 'calc(5 / 16 * 100%)',\r\n    pointerEvents: 'none',\r\n  },\r\n  rail: {\r\n    height: 'calc(5 / 16 * 100%)',\r\n    backgroundColor: 'gray',\r\n    opacity: 0.4,\r\n  },\r\n});\r\n\r\nconst VideoProgress: React.FC<{}> = () => {\r\n  const videoStore = React.useContext(VideoPlayerContext);\r\n\r\n  const progressStyleInputs: ProgressStyleInputsType = React.useMemo(() => ({\r\n    previewEnabled: videoStore.previewPeekIsActive,\r\n    fullscreenIsActive: videoStore.fullscreenIsActive,\r\n  }), [videoStore.previewPeekIsActive, videoStore.fullscreenIsActive]);\r\n\r\n  const progressClasses = useProgressStyles(progressStyleInputs);\r\n\r\n  return (\r\n    <Box \r\n      position='relative'\r\n      marginX={4}\r\n    >\r\n      <TimePreview />\r\n      \r\n      <Box\r\n        position='relative'\r\n        height='16px'\r\n        display='flex'\r\n        alignItems='center'\r\n      >\r\n        <Slider\r\n          onMouseMove={videoStore.handlePreviewSeek}\r\n          onMouseLeave={videoStore.cancelPreviewSeek}\r\n          onMouseEnter={videoStore.startPreviewSeek}\r\n          onChange={videoStore.handleSeek}\r\n          onChangeCommitted={videoStore.handleSeek}\r\n          classes={progressClasses}\r\n          min={0}\r\n          step={0.1}\r\n          max={videoStore.durationSeconds}\r\n          valueLabelDisplay=\"off\"\r\n          getAriaValueText={formatSecondsToTimeDuration}\r\n          aria-label=\"progress-slider\"\r\n          value={videoStore.currentPositionSeconds}\r\n        />\r\n\r\n        <SeekPreview />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default observer(VideoProgress);","import * as React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst useControlStyles = makeStyles({\r\n  root: {\r\n    padding: 0,\r\n    '&:hover': {\r\n      backgroundColor: 'unset',\r\n    }\r\n  }\r\n});\r\n\r\ntype VideoControlButtonPropsType = {\r\n  children: React.ReactElement,\r\n  onClick: React.EventHandler<React.SyntheticEvent>,\r\n  [otherProps: string]: any,\r\n};\r\n\r\nconst VideoControlButton: React.FC<VideoControlButtonPropsType> = ({ children, onClick, ...otherProps }) => {\r\n  const classes = useControlStyles();\r\n\r\n  return (\r\n    <IconButton\r\n      classes={classes}\r\n      disableFocusRipple \r\n      disableRipple\r\n      onClick={onClick}\r\n      color=\"secondary\"\r\n    >\r\n      {React.cloneElement(React.Children.only(children), otherProps)}\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default VideoControlButton;","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nimport VideoControlButton from './VideoControlButton';\r\nimport { VideoPlayerContext } from './VideoPlayer';\r\n\r\ntype SliderStylesInputsType = {\r\n  fullscreenIsActive: boolean,\r\n};\r\n\r\nconst useSliderStyles = makeStyles<Theme, SliderStylesInputsType>((theme) => ({\r\n  root: {\r\n    display: 'inline-block',\r\n    margin: theme.spacing(0, 4, 0, 4),\r\n  },\r\n  track: {\r\n    height: 4,\r\n  },\r\n  rail: {\r\n    height: 4,\r\n    backgroundColor: 'gray',\r\n  },\r\n  thumb: {\r\n    width: 16,\r\n    height: 16,\r\n    marginTop: -6,\r\n    '&:focus, &:hover, &$active': {\r\n      boxShadow: 'unset',\r\n    },\r\n    transform: ({ fullscreenIsActive }) => `scale(${fullscreenIsActive ? 1 : 0.75})`,\r\n    transition: 'transform .2s linear',\r\n  },\r\n}));\r\n\r\nconst VolumeControl: React.FC<{}> = () => {\r\n  const videoStore = React.useContext(VideoPlayerContext);\r\n\r\n  const sliderStylesInputs = React.useMemo(() => ({\r\n    fullscreenIsActive: videoStore.fullscreenIsActive,\r\n  }), [videoStore.fullscreenIsActive]);\r\n  const sliderClasses = useSliderStyles(sliderStylesInputs);\r\n\r\n  const sliderMaxWidth = videoStore.fullscreenIsActive ? '100px' : '76px';\r\n  const sliderDisplayWidth = videoStore.pointerIsHovering ? sliderMaxWidth : '0px';\r\n\r\n  return (\r\n    <Box \r\n      display='flex'\r\n      alignItems='center'\r\n      marginX={2}\r\n      onMouseEnter={videoStore.handleVolumeOnHover}\r\n    >\r\n      <VideoControlButton \r\n        edge=\"end\" \r\n        aria-label=\"volume\"\r\n        onClick={videoStore.toggleVolume}\r\n      >\r\n        {((videoStore.volumeLevel <= 0) || videoStore.volumeIsMuted) \r\n          ? <VolumeOffIcon />\r\n          : (videoStore.volumeLevel >= 0.5) \r\n            ? <VolumeUpIcon />\r\n            : <VolumeDownIcon />\r\n        }\r\n      </VideoControlButton>\r\n\r\n      <Box \r\n        display='flex'\r\n        alignItems='center'\r\n        overflow='hidden'\r\n        width={sliderDisplayWidth} \r\n        style={{ transition: 'width .2s linear' }}\r\n      >\r\n        <Slider\r\n          classes={sliderClasses}\r\n          min={0}\r\n          step={0.01}\r\n          max={1}\r\n          color=\"secondary\"\r\n          onChange={videoStore.handleVolumeChange}\r\n          valueLabelDisplay=\"off\"\r\n          aria-label=\"volume-slider\"\r\n          value={videoStore.volumeIsMuted ? 0 : videoStore.volumeLevel} \r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default observer(VolumeControl);","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport {\r\n  usePopupState,\r\n  bindToggle,\r\n  bindMenu,\r\n} from 'material-ui-popup-state/hooks'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\nimport VideoControlButton from './VideoControlButton';\r\nimport { VideoPlayerContext } from './VideoPlayer';\r\n\r\ntype MenuStylesInputsType = {\r\n  maxHeight: number,\r\n};\r\n\r\nconst useMenuStyles = makeStyles<Theme, MenuStylesInputsType>(theme => ({\r\n  paper: {\r\n    maxHeight: ({ maxHeight }) => maxHeight,\r\n    backgroundColor: '#000d',\r\n    '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n}));\r\n\r\nconst useIconStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst playbackSpeeds = [0.25, 0.5, 0.75, 1, 1.25, 1.5, 1.75, 2];\r\nconst anchorOrigin = { vertical: 'bottom' as 'bottom', horizontal: 'right' as 'right' };\r\nconst transformOrigin = { vertical: 'bottom' as 'bottom', horizontal: 'right' as 'right' };\r\nconst listItemTypographyVariant = { variant: 'body2' as 'body2' };\r\nconst opacityOnStyle = { opacity: 1 };\r\nconst opacityOffStyle = { opacity: 0 };\r\n\r\ntype SettingsControlPropsType = {\r\n  aboveControlsRef: HTMLDivElement | null,\r\n};\r\n\r\nconst SettingsControl: React.FC<SettingsControlPropsType> = ({ aboveControlsRef = null }) => {\r\n  const videoStore = React.useContext(VideoPlayerContext);\r\n  const popupState = usePopupState({ variant: 'popover', popupId: 'settingsMenu' });\r\n  const [selectedItemIndex, setSelectedItemIndex] = React.useState(3);\r\n  \r\n  let clampedMinMaxAvailableContainerHeight = 500;\r\n  if (aboveControlsRef) {\r\n    const clampedMaxAvailableContainerHeight = Math.min(aboveControlsRef.clientHeight - 10, 500);\r\n    clampedMinMaxAvailableContainerHeight = Math.max(50, clampedMaxAvailableContainerHeight);\r\n  }\r\n\r\n  const menuStylesInput = React.useMemo(() => ({\r\n    maxHeight: clampedMinMaxAvailableContainerHeight\r\n  }), [clampedMinMaxAvailableContainerHeight]);\r\n\r\n  const menuClasses = useMenuStyles(menuStylesInput);\r\n  const iconClasses = useIconStyles();\r\n\r\n  React.useEffect(() => {\r\n    if (!aboveControlsRef) return;\r\n\r\n    popupState.setAnchorEl(aboveControlsRef);\r\n  }, [popupState, aboveControlsRef]);\r\n\r\n  const makeOnMenuItemClick = React.useCallback((speed, index) => (event: React.SyntheticEvent) => {\r\n    setSelectedItemIndex(index);\r\n    videoStore.handlePlaybackSpeedChange(speed);\r\n    popupState.close();\r\n  }, [popupState, videoStore, setSelectedItemIndex]);\r\n\r\n  return (\r\n    <Box>\r\n      <VideoControlButton \r\n        edge=\"end\"\r\n        aria-label=\"settings\" \r\n        {...bindToggle(popupState)}\r\n      >\r\n        <SettingsIcon />\r\n      </VideoControlButton>\r\n\r\n      <Menu \r\n        {...bindMenu(popupState)}\r\n        variant=\"menu\"\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={anchorOrigin}\r\n        transformOrigin={transformOrigin}\r\n        classes={menuClasses}\r\n        disablePortal={true}\r\n        keepMounted={true}\r\n      >\r\n        <MenuItem \r\n          divider={true} \r\n        >\r\n          <ListItemText \r\n            primaryTypographyProps={listItemTypographyVariant} \r\n            primary=\"Playback Speed\"\r\n          />\r\n        </MenuItem>\r\n\r\n        { /* This loop is static, generated by a constant list so we can use hooks inside \r\n          since the order and number of hooks is the same every time */\r\n          playbackSpeeds.map((speed, index) => {\r\n            const textContent = (speed === 1) ? 'Normal' : speed.toString().padStart(3, ' ');\r\n            const isSelected = (selectedItemIndex === index);\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps, react-hooks/rules-of-hooks\r\n            const itemOnClick = React.useCallback(makeOnMenuItemClick(speed, index), [makeOnMenuItemClick]);\r\n\r\n            return (\r\n              <MenuItem\r\n                key={textContent}\r\n                onClick={itemOnClick}\r\n              >\r\n                <CheckIcon\r\n                  color=\"secondary\" \r\n                  classes={iconClasses} \r\n                  style={isSelected ? opacityOnStyle : opacityOffStyle }\r\n                />\r\n                <ListItemText\r\n                  primaryTypographyProps={listItemTypographyVariant} \r\n                  primary={textContent} \r\n                />\r\n              </MenuItem>\r\n            );\r\n          })\r\n        }\r\n      </Menu>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default observer(SettingsControl);","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\n\r\nimport VideoControlButton from './VideoControlButton';\r\nimport { VideoPlayerContext } from './VideoPlayer';\r\n\r\n\r\nconst FullScreenControl: React.FC<{}> = () => {\r\n  const videoStore = React.useContext(VideoPlayerContext);\r\n\r\n  return (\r\n    <VideoControlButton \r\n      onClick={videoStore.handleFullscreen}\r\n      aria-label=\"full-screen\"\r\n    >\r\n      {videoStore.fullscreenIsActive \r\n        ? <FullscreenExitIcon fontSize=\"large\"/> \r\n        : <FullscreenIcon fontSize=\"large\"/>\r\n      }\r\n    </VideoControlButton>\r\n  );\r\n};\r\n\r\nexport default observer(FullScreenControl);","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\n\r\nimport VideoControlButton from './VideoControlButton';\r\nimport { VideoPlayerContext } from './VideoPlayer';\r\n\r\n\r\nconst PlaybackControl: React.FC<{}> = () => {\r\n  const videoStore = React.useContext(VideoPlayerContext);\r\n\r\n  return (\r\n    <VideoControlButton \r\n      onClick={videoStore.handlePlayPause} \r\n      edge=\"end\" \r\n      aria-label=\"play or pause\"\r\n    >\r\n      {(videoStore.videoIsPlaying)\r\n        ? <PauseIcon fontSize=\"large\"/> \r\n        : <PlayArrowIcon fontSize=\"large\"/>}\r\n    </VideoControlButton>\r\n  );\r\n};\r\n\r\nexport default observer(PlaybackControl);","import * as React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\nimport PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled';\r\n\r\nimport { VideoPlayerContext } from './VideoPlayer';\r\n\r\n\r\nconst useFeedbackStyles = makeStyles({\r\n  actionAnimationStart: {\r\n    fontSize: \"4rem\",\r\n    opacity: 0.5,\r\n  },\r\n  actionRestState: {\r\n    transition: 'all 0.5s ease-out',\r\n    fontSize: \"8rem\",\r\n    opacity: 0,\r\n  },\r\n});\r\n\r\nconst VideoClickFeedback: React.FC<{}> = () => {\r\n  const videoStore = React.useContext(VideoPlayerContext);\r\n  const classes = useFeedbackStyles();\r\n\r\n  const iconClasses = React.useMemo(() => ({ \r\n    root: videoStore.videoClickAnimationDisplaying \r\n      ? classes.actionAnimationStart \r\n      : classes.actionRestState \r\n  }), [videoStore.videoClickAnimationDisplaying, classes]);\r\n\r\n  const FeedbackIconType = (videoStore.videoIsPlaying)\r\n    ? PlayCircleFilledIcon \r\n    : PauseCircleFilledIcon;\r\n\r\n  return (\r\n    <Box \r\n      display='flex'\r\n      alignItems='center'\r\n      justifyContent='center'\r\n      height='100%'\r\n      width='100%'\r\n      position='absolute'\r\n      zIndex={1}\r\n      top={0}\r\n      left={0}\r\n      bgcolor={videoStore.seekIsPending ? '#000a' : 'initial'}\r\n    >\r\n      <FeedbackIconType\r\n        classes={iconClasses}\r\n        color=\"secondary\"\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default observer(VideoClickFeedback);","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport { formatSecondsToTimeDuration } from '../utils/functions';\r\nimport { VideoPlayerContext } from './VideoPlayer';\r\n\r\n\r\nconst useTextStyles = makeStyles({\r\n  root: {\r\n    lineHeight: '100%',\r\n  },\r\n});\r\n\r\nconst ElapsedTime: React.FC<{}> = () => {\r\n  const videoStore = React.useContext(VideoPlayerContext);\r\n  const textClasses = useTextStyles();\r\n\r\n  return (\r\n    <Box paddingTop={1} display=\"flex\" alignItems=\"center\">\r\n      <Typography\r\n        classes={textClasses}\r\n        variant=\"body2\" \r\n        color=\"secondary\"\r\n      >\r\n        {`${formatSecondsToTimeDuration(videoStore.currentPositionSeconds)} \r\n          / ${formatSecondsToTimeDuration(videoStore.durationSeconds)}`}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default observer(ElapsedTime);","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { flowResult } from 'mobx';\r\nimport { CancellablePromise } from 'mobx/dist/api/flow';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport VideoProgress from './VideoProgress';\r\nimport VolumeControl from './VolumeControl';\r\nimport SettingsControl from './SettingsControl';\r\nimport FullscreenControl from './FullscreenControl';\r\nimport PlaybackControl from './PlaybackControl';\r\nimport VideoClickFeedback from './VideoClickFeedback';\r\nimport ElapsedTime from './ElapsedTime';\r\nimport { VideoPlayerContext } from './VideoPlayer';\r\n\r\n\r\nconst useVideoStyles = makeStyles({\r\n  controlsAndProgress: {\r\n    background: 'linear-gradient(0deg, #000a, transparent)',\r\n  },\r\n  controlsAndProgressActive: {\r\n    opacity: 1,\r\n  },\r\n  controlsAndProgressIdle: {\r\n    transition: 'all 0.2s linear',\r\n    opacity: 0,\r\n  },\r\n  cursorOn: {\r\n    cursor: 'auto',\r\n  },\r\n  cursorOff: {\r\n    transition: 'all 0.2s linear',\r\n    cursor: 'none',\r\n  },\r\n});\r\n\r\nconst VideoControls: React.FC<{}> = () => {\r\n  const classes = useVideoStyles();\r\n  const videoStore = React.useContext(VideoPlayerContext);\r\n  const pendingControlHideHandler = React.useRef<CancellablePromise<void> | null>(null);\r\n  const [aboveControlsRef, setAboveControlsRef] = React.useState<HTMLDivElement | null>(null);\r\n\r\n  const activateControlsHandler = React.useCallback(() => {\r\n    // Cancel any existing scheduled hiding of video controls \r\n    pendingControlHideHandler?.current?.cancel();\r\n\r\n    const pendingHideHandle = flowResult(videoStore.setUserAsActive());\r\n    pendingHideHandle.catch(() => null);\r\n    pendingControlHideHandler.current = pendingHideHandle;\r\n  }, [videoStore, pendingControlHideHandler]);\r\n\r\n  const hideControlsHandler = React.useCallback(() => {\r\n    // Cancel any existing scheduled hiding of video controls\r\n    pendingControlHideHandler?.current?.cancel();\r\n\r\n    videoStore.setUserAsIdle();\r\n  }, [videoStore, pendingControlHideHandler]);\r\n\r\n  return (\r\n    <Box \r\n      onMouseLeave={hideControlsHandler}\r\n      onMouseEnter={activateControlsHandler}\r\n      onClick={activateControlsHandler}\r\n      onMouseMove={activateControlsHandler}\r\n      onTouchMove={activateControlsHandler}\r\n      onTouchStart={activateControlsHandler}\r\n      className={videoStore.userIsIdle ? classes.cursorOff : classes.cursorOn}\r\n      height='100%'\r\n      width='100%'\r\n      position='absolute'\r\n      zIndex={1}\r\n      top={0}\r\n      left={0}\r\n    >\r\n      <VideoClickFeedback />\r\n\r\n      <Box \r\n        className={videoStore.userIsIdle \r\n          ? classes.controlsAndProgressIdle \r\n          : classes.controlsAndProgressActive}\r\n        display='flex'\r\n        flexDirection='column'\r\n        width='100%'\r\n        height='100%'\r\n        position='relative'\r\n        zIndex={2}\r\n      >\r\n        <Box \r\n          flexGrow={1}\r\n          // @ts-expect-error\r\n          ref={setAboveControlsRef}\r\n          onClick={videoStore.handleVideoClick}\r\n        />\r\n\r\n        <Box className={classes.controlsAndProgress}>\r\n          <VideoProgress />\r\n\r\n          <Box \r\n            display='flex'\r\n            alignItems='center'\r\n            justifyContent='space-between'\r\n            marginBottom={2}\r\n            paddingX={5}\r\n          >\r\n            <Box \r\n              display='flex'\r\n              alignItems='center'\r\n              onMouseLeave={videoStore.handleVolumeOnHoverExit}\r\n            >\r\n              <PlaybackControl />\r\n              <VolumeControl />\r\n              <ElapsedTime />\r\n            </Box>\r\n\r\n            <Box\r\n              display='flex'\r\n              alignItems='center'\r\n            >\r\n              <SettingsControl aboveControlsRef={aboveControlsRef} />\r\n              <FullscreenControl />\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default observer(VideoControls);","import { makeAutoObservable, configure } from 'mobx';\r\nimport fscreen from 'fscreen';\r\nimport { delayMsAsync, delayNextFrame } from '../utils/functions';\r\nimport { MouseEventHandler } from 'react';\r\n\r\nconfigure({\r\n  enforceActions: \"always\",\r\n  computedRequiresReaction: true,\r\n  reactionRequiresObservable: true,\r\n  observableRequiresReaction: true,\r\n  disableErrorBoundaries: true\r\n});\r\n\r\nclass VideoStore {\r\n  videoElement: HTMLVideoElement | null = null;\r\n  videoContainer: HTMLDivElement | null = null;\r\n  videoIsPlaying = false;\r\n  volumeLevel = 1;\r\n  volumeIsMuted = false;\r\n  currentPositionSeconds = 0;\r\n  durationSeconds = 0;\r\n  fullscreenIsActive = false;\r\n  videoClickAnimationDisplaying = false;\r\n  userIsIdle = false;\r\n  seekIsPending = false;\r\n  videoWasPlayingBeforeSeek = false;\r\n  seekHoverPositionPercent = 0;\r\n  previewPeekIsActive = false;\r\n  pointerIsHovering = false;\r\n  handleVideoClick = function*() { (yield Promise.resolve(0)) as void; };\r\n  setUserAsActive = function*() { (yield Promise.resolve(0)) as void; };\r\n\r\n  constructor() {\r\n    this.setInitialState();\r\n\r\n    makeAutoObservable(this, {\r\n      videoElement: false,\r\n      videoContainer: false,\r\n      setVideoElement: false,\r\n      cleanUp: false,\r\n      videoWasPlayingBeforeSeek: false,\r\n    });\r\n  }\r\n\r\n  setInitialState = () => {\r\n    this.videoIsPlaying = false;\r\n    this.volumeLevel = 1;\r\n    this.volumeIsMuted = false;\r\n    this.currentPositionSeconds = 0;\r\n    this.durationSeconds = 0;\r\n    this.fullscreenIsActive = false;\r\n    this.videoClickAnimationDisplaying = false;\r\n    this.userIsIdle = false;\r\n    this.seekIsPending = false;\r\n    this.videoWasPlayingBeforeSeek = false;\r\n    this.seekHoverPositionPercent = 0;\r\n    this.previewPeekIsActive = false;\r\n    this.pointerIsHovering = false;\r\n    this.handleVideoClick = this.handleVideoClickFlow.bind(this);\r\n    this.setUserAsActive = this.setUserAsActiveFlow.bind(this);\r\n  };\r\n\r\n  setVideoElement = (videoElement: HTMLVideoElement) => {\r\n    this.videoElement = videoElement;\r\n    if (videoElement) {\r\n      videoElement.addEventListener('loadedmetadata', this.updateDuration);\r\n      videoElement.addEventListener('ended', this.handleEnd);\r\n    }\r\n  };\r\n\r\n  setVideoContainer = (videoContainer: HTMLDivElement) => {\r\n    this.videoContainer = videoContainer;\r\n    fscreen.addEventListener('fullscreenchange', this.handleFullscreenChange);\r\n  };\r\n  \r\n  cleanUp = () => {\r\n    this.videoElement?.removeEventListener('loadedmetadata', this.updateDuration);\r\n    this.videoElement?.removeEventListener('ended', this.handleEnd);\r\n    this.videoContainer?.removeEventListener('fullscreenchange', this.handleFullscreenChange);\r\n\r\n    this.videoElement = null;\r\n    this.videoContainer = null;\r\n  };\r\n\r\n  setUserAsIdle = () => {\r\n    if (this.videoIsPlaying) {\r\n      this.userIsIdle = true;\r\n    }\r\n  };\r\n\r\n  handleEnd = () => {\r\n    this.videoIsPlaying = false;\r\n  };\r\n\r\n  updateTime = () => {\r\n    if (!this.videoElement) return;\r\n\r\n    // In some mobile browsers, when loadedmetadata is raised, if it is raised at all,\r\n    // the duration may not have the correct value, or even any value at all so we\r\n    // check again here\r\n    if (!this.durationSeconds) this.updateDuration();\r\n\r\n    this.currentPositionSeconds = this.videoElement.currentTime;\r\n\r\n    // While the video keeps playing we update the progress bar once for every rendered frame\r\n    if (!this.videoElement.paused && !this.videoElement.ended) {\r\n      window.requestAnimationFrame(this.updateTime);\r\n    }\r\n  };\r\n\r\n  updateDuration = (): void => {\r\n    if (!this.videoElement) return;\r\n\r\n    this.durationSeconds = Math.floor(this.videoElement.duration);\r\n  };\r\n\r\n  handlePlayPause = () => {\r\n    if (!this.videoElement) return;\r\n\r\n    if (this.videoElement.paused || this.videoElement.ended) {\r\n      this.videoElement.play();\r\n      this.videoIsPlaying = true;\r\n      this.updateTime();\r\n    } else {\r\n      this.videoElement.pause();\r\n      this.videoIsPlaying = false;\r\n    }\r\n  };\r\n\r\n  handlePreviewSeek: MouseEventHandler = (event) => {\r\n    const targetElement = event.currentTarget;\r\n    const { width, left } = targetElement.getBoundingClientRect();\r\n\r\n    if (!this.videoContainer || this.seekIsPending) return;\r\n    this.seekHoverPositionPercent = (event.pageX - left) * 100 / width;\r\n  };\r\n\r\n  get seekHoverPositionSeconds(): number {\r\n    const hoverTime = this.seekHoverPositionPercent * this.durationSeconds / 100;\r\n    return this.seekIsPending ? this.currentPositionSeconds : hoverTime;\r\n  }\r\n\r\n  get seekHoverPositionPercentClamped(): number {\r\n    const currentTimePercent = this.currentPositionSeconds * 100 / this.durationSeconds;\r\n    const hoverPercent = this.seekIsPending ? currentTimePercent : this.seekHoverPositionPercent;\r\n    return Math.max(5, Math.min(hoverPercent, 95));\r\n  }\r\n\r\n  startPreviewSeek: MouseEventHandler = (event) => {\r\n    this.handlePreviewSeek(event);\r\n    this.previewPeekIsActive = true;\r\n  };\r\n\r\n  cancelPreviewSeek: MouseEventHandler = (event) => {\r\n    this.seekHoverPositionPercent = 0;\r\n    this.previewPeekIsActive = false;\r\n  };\r\n\r\n  handleSeek = (event: React.ChangeEvent<{}>, newTime: number | number[]): void => {\r\n    if (typeof newTime !== 'number') return;\r\n    if (!this.videoElement || !['mousedown', 'mouseup', 'mousemove'].includes(event.type)) return;\r\n\r\n    const isMouseDown = (event.type === 'mousedown');\r\n    const isMouseUp = (event.type === 'mouseup');\r\n\r\n    if (isMouseDown) {\r\n      if (!this.videoElement.paused && !this.videoElement.ended) {\r\n        this.videoElement.pause();\r\n        this.videoIsPlaying = false;\r\n        this.videoWasPlayingBeforeSeek = true;\r\n      } else {\r\n        this.videoWasPlayingBeforeSeek = false;\r\n      }\r\n      this.seekIsPending = true;\r\n    } else if (isMouseUp) {\r\n      if (this.videoWasPlayingBeforeSeek) {\r\n        this.videoElement.play();\r\n        this.videoIsPlaying = true;\r\n        this.updateTime();\r\n      }\r\n      this.seekIsPending = false;\r\n    }\r\n\r\n    // Update position on mouse down, up and move events\r\n    this.videoElement.currentTime = newTime;\r\n    this.currentPositionSeconds = newTime;\r\n  };\r\n\r\n  handleFullscreen = (): void => {\r\n    if (fscreen.fullscreenEnabled && this.videoContainer) {\r\n      if (this.fullscreenIsActive && fscreen.fullscreenElement) {\r\n        fscreen.exitFullscreen();\r\n      } else {\r\n        fscreen.requestFullscreen(this.videoContainer);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleFullscreenChange = (): void => {\r\n    if (fscreen.fullscreenEnabled && this.videoContainer) {\r\n      if (fscreen.fullscreenElement) {\r\n        this.fullscreenIsActive = true;\r\n        document.documentElement.style.fontSize = \"150%\";\r\n      } else {\r\n        this.fullscreenIsActive = false;\r\n        document.documentElement.style.fontSize = \"100%\";\r\n      }\r\n    }\r\n  };\r\n\r\n  handleVolumeChange = (event: React.ChangeEvent<{}>, newVolume: number | number[]): void => {\r\n    if (typeof newVolume !== 'number') return;\r\n    if (!this.videoElement || newVolume < 0 || newVolume > 1 || !Number.isFinite(newVolume)) return;\r\n\r\n    this.videoElement.volume = newVolume;\r\n    this.volumeLevel = newVolume;\r\n  };\r\n\r\n  toggleVolume = (): void => {\r\n    if (!this.videoElement) return;\r\n    \r\n    this.volumeIsMuted = !this.volumeIsMuted;\r\n    this.videoElement.muted = this.volumeIsMuted;\r\n  };\r\n \r\n  handlePlaybackSpeedChange = (speed: number): void => {\r\n    if (!this.videoElement || speed < 0 || speed > 2 || !Number.isFinite(speed)) return;\r\n    \r\n    this.videoElement.playbackRate = speed;\r\n  };\r\n\r\n  handleVolumeOnHover = (): void => {\r\n    this.pointerIsHovering = true;\r\n  }\r\n\r\n  handleVolumeOnHoverExit = (): void => {\r\n    this.pointerIsHovering = false;\r\n  }\r\n\r\n  *handleVideoClickFlow(): Generator<Promise<number>, void, void> {\r\n    this.handlePlayPause();\r\n    this.videoClickAnimationDisplaying = true;\r\n    \r\n    yield delayNextFrame();\r\n    this.videoClickAnimationDisplaying = false;\r\n  };\r\n\r\n  *setUserAsActiveFlow(): Generator<Promise<number>, void, void> {\r\n    this.userIsIdle = false;\r\n\r\n    yield delayMsAsync(4000);\r\n    this.setUserAsIdle();\r\n  };\r\n}\r\n\r\nexport default VideoStore;","import * as React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport VideoControls from './VideoControls';\r\nimport VideoStore from '../store/VideoStore';\r\n\r\nconst useStyles = makeStyles({\r\n  video: {\r\n    display: 'block',\r\n    objectFit: 'contain',\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nexport const VideoPlayerContext = React.createContext<VideoStore>(null!);\r\n\r\ntype VideoSourceType = {\r\n  url: string,\r\n  type: string,\r\n};\r\n\r\ntype VideoPlayerPropsType = {\r\n  posterUrl: string,\r\n  manualDownloadUrl: string,\r\n  sourceList: VideoSourceType[],\r\n}\r\n\r\nconst VideoPlayer: React.FC<VideoPlayerPropsType> = ({\r\n  posterUrl = '',\r\n  manualDownloadUrl = '',\r\n  sourceList = [],\r\n}) => {\r\n  const classes = useStyles();\r\n  const videoElementRef = React.useRef<HTMLVideoElement>(null!);\r\n  const videoContainerRef = React.useRef<HTMLDivElement>(null!);\r\n  const videoStoreRef = React.useRef<VideoStore | null>(null);\r\n\r\n  // Lazy initialization of a single videoStore instance per mounted component\r\n  const getStore = React.useCallback(() => {\r\n    if (!videoStoreRef.current) {\r\n      videoStoreRef.current = new VideoStore();\r\n    }\r\n\r\n    return videoStoreRef.current;\r\n  }, [videoStoreRef]);\r\n  \r\n  // Assign component refs required by the video store after rendering & DOM insertion\r\n  React.useEffect(() => {\r\n    const videoStore = getStore();\r\n\r\n    if (videoElementRef.current) {\r\n      videoStore.setVideoElement(videoElementRef.current);\r\n    }\r\n    \r\n    if (videoContainerRef.current) {\r\n      videoStore.setVideoContainer(videoContainerRef.current);\r\n    }\r\n    \r\n    return videoStore.cleanUp;\r\n  }, [getStore]);\r\n  \r\n  // Reset store state if the video component props change\r\n  React.useEffect(() => {\r\n    const videoStore = getStore();\r\n    videoStore.setInitialState();\r\n  });\r\n\r\n  return (\r\n    <Box\r\n      position='relative'\r\n      border={2}\r\n      borderColor='grey.700'\r\n      // @ts-expect-error\r\n      ref={videoContainerRef}\r\n    >\r\n      <VideoPlayerContext.Provider value={getStore()} >\r\n        <video\r\n          id=\"video\"\r\n          ref={videoElementRef}\r\n          className={classes.video}\r\n          preload=\"metadata\"\r\n          poster={posterUrl}\r\n        >\r\n          {sourceList.map(source => {\r\n            const { url, type } = source;\r\n            return (\r\n              <source key={url} src={url} type={type} />\r\n            );\r\n          })}\r\n\r\n          <a href={manualDownloadUrl}>Download Video</a>\r\n        </video>\r\n\r\n        <VideoControls />\r\n      </VideoPlayerContext.Provider>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default VideoPlayer;","import * as React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nimport VideoPlayer from './components/VideoPlayer';\n\n\nconst App: React.FC<{}> = () => (\n  <Box display=\"flex\" justifyContent=\"center\">\n    <Box height={480} marginY={16} marginX=\"auto\">\n      <VideoPlayer\n        posterUrl={process.env.PUBLIC_URL + \"/preview/video.jpg\"}\n        manualDownloadUrl={process.env.PUBLIC_URL + \"/video/video.mp4\"}\n        sourceList={[{\n            url: process.env.PUBLIC_URL + \"/video/video.mp4\",\n            type: \"video/mp4\",\n          }\n        ]}\n      />\n\n      <Box display=\"flex\" justifyContent=\"center\" marginTop={2}>\n        <Typography variant=\"h4\" gutterBottom>\n          Big Buck Bunny\n        </Typography>\n      </Box>\n    </Box>\n  </Box>\n);\n\nexport default App;\n","import { red } from '@material-ui/core/colors';\r\n// https://github.com/mui-org/material-ui/issues/13394 this suppresses a Strict Mode warning\r\nimport { unstable_createMuiStrictModeTheme as createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      '@global': {\r\n        /* The emerging W3C standard that is currently Firefox-only */\r\n        '*': {\r\n          scrollbarColor: '#424242 #8e8e8e',\r\n        },\r\n        /* Works on Chrome/Edge/Safari */\r\n        '*::-webkit-scrollbar': {\r\n          width: 10,\r\n        },\r\n        '*::-webkit-scrollbar-track': {\r\n          background: '#424242',\r\n        },\r\n        '*::-webkit-scrollbar-thumb': {\r\n          backgroundColor: '#8e8e8e',\r\n          borderRadius: 4,\r\n        }\r\n      }\r\n    }\r\n  },\r\n  spacing: 4,\r\n  palette: {\r\n    primary: {\r\n      main: '#ff5722',\r\n    },\r\n    secondary: {\r\n      main: '#ffffff',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#ccbfa0',\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}