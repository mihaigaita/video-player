{"version":3,"sources":["utils/functions.js","components/TimePreview.js","components/VideoProgress.js","components/VideoControlButton.js","components/VolumeControl.js","components/SettingsControl.js","components/FullscreenControl.js","components/PlaybackControl.js","components/VideoClickFeedback.js","components/ElapsedTime.js","components/VideoControls.js","store/VideoStore.js","components/VideoPlayer.js","App.js","theme.js","index.js"],"names":["formatSecondsToTimeDuration","value","hours","Math","floor","minutes","seconds","hoursText","minutesSecondsText","toString","padStart","delayMsAsync","ms","Promise","resolve","setTimeout","usePreviewStyles","makeStyles","theme","timePreview","display","position","top","left","seekTarget","opacity","previewEnabled","background","padding","spacing","borderRadius","TimePreview","observer","videoStore","useContext","VideoPlayerContext","classes","seekHoverPositionPercentClamped","previewPeekIsActive","className","Typography","variant","color","seekHoverPositionSeconds","useProgressStyles","marginLeft","marginX","marginRight","progressContainer","height","seekPreview","marginTop","width","zIndex","root","thumb","boxShadow","hide","active","smoothMove","transition","transitionProperty","track","pointerEvents","rail","backgroundColor","VideoProgress","seekHoverPositionPercent","progressMarginPixels","Slider","onMouseMove","handlePreviewSeek","onMouseLeave","cancelPreviewSeek","onMouseEnter","startPreviewSeek","onChange","handleSeek","onChangeCommitted","component","clsx","seekIsPending","min","step","max","durationSeconds","valueLabelDisplay","getAriaValueText","aria-label","currentPositionSeconds","useControlStyles","iconRoot","VideoControlButton","children","onClick","otherProps","IconButton","disableFocusRipple","disableRipple","React","cloneElement","Children","only","useVolumeStyles","wrapper","alignItems","margin","useSliderStyles","useSliderContainerStyles","container","pointerIsHovering","overflow","VolumeControl","volumeClasses","sliderClasses","sliderContainerClasses","handleVolumeOnHover","edge","toggleVolume","volumeLevel","volumeIsMuted","handleVolumeChange","useStyles","menuPaper","maxHeight","palette","common","white","playbackSpeeds","SettingsControl","aboveControlsRef","popupState","usePopupState","popupId","useState","selectedItemIndex","setSelectedItemIndex","clampedMinMaxAvailableContainerHeight","clampedMaxAvailableContainerHeight","clientHeight","useEffect","setAnchorEl","makeOnMenuItemClick","useCallback","speed","index","event","handlePlaybackSpeedChange","close","bindToggle","Menu","bindMenu","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","paper","disablePortal","keepMounted","MenuItem","divider","ListItemText","primaryTypographyProps","primary","map","textContent","isSelected","style","FullScreenControl","handleFullscreen","fullscreenIsActive","fontSize","PlaybackControl","handlePlayPause","videoIsPlaying","useFeedbackStyles","actionFeedbackWrapper","justifyContent","backgroundMask","actionAnimationStart","actionRestState","VideoClickFeedback","FeedbackIconType","PlayCircleFilledIcon","PauseCircleFilledIcon","videoClickAnimationDisplaying","textWrapper","paddingTop","textRoot","lineHeight","ElapsedTime","useVideoStyles","controlsRoot","buttons","marginBottom","aboveControls","flexGrow","controlsAndProgress","flexDirection","controlsAndProgressActive","controlsAndProgressIdle","cursorOn","cursor","cursorOff","controlGroup","VideoControls","pendingControlHideHandler","useRef","setAboveControlsRef","activateControlsHandler","current","cancel","pendingHideHandle","setUserAsActive","call","catch","hideControlsHandler","setUserAsIdle","onTouchMove","onTouchStart","userIsIdle","ref","handleVideoClick","bind","handleVolumeOnHoverExit","FullscreenControl","configure","enforceActions","computedRequiresReaction","reactionRequiresObservable","observableRequiresReaction","disableErrorBoundaries","VideoStore","videoElement","videoContainer","setInitialState","videoWasPlayingBeforeSeek","setVideoElement","addEventListener","updateDuration","updateTime","handleEnd","setVideoContainer","cleanUp","removeEventListener","currentTime","duration","paused","ended","play","pause","target","offsetWidth","progressLeftOffset","offsetLeft","pageX","newPosition","includes","type","isMouseDown","isMouseUp","fscreen","fullscreenEnabled","fullscreenElement","exitFullscreen","document","documentElement","requestFullscreen","newVolume","Number","isFinite","volume","muted","playbackRate","this","makeAutoObservable","border","video","objectFit","createContext","Video","posterUrl","manualDownloadUrl","sourceList","videoElementRef","videoContainerRef","Provider","id","preload","poster","source","url","src","href","topContainer","title","App","VideoPlayer","process","gutterBottom","createMuiTheme","overrides","MuiCssBaseline","scrollbarColor","main","secondary","error","red","A400","default","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.07636fad.chunk.js","sourcesContent":["const formatSecondsToTimeDuration = (value) => {\r\n  const hours = Math.floor(value / 60 / 24);\r\n  const minutes = Math.floor(value / 60 % 24);\r\n  const seconds = Math.floor(value % 60);\r\n\r\n  const hoursText = hours ? `${hours}:` : '';\r\n  const minutesSecondsText = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n\r\n  return `${hoursText}${minutesSecondsText}`;\r\n};\r\n\r\nconst delayMsAsync = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\nexport {\r\n  formatSecondsToTimeDuration,\r\n  delayMsAsync,\r\n};","import { useContext } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { formatSecondsToTimeDuration } from '../utils/functions';\r\nimport { VideoPlayerContext } from './VideoPlayer';\r\n\r\nconst usePreviewStyles = makeStyles(theme => ({\r\n  timePreview: {\r\n    display: 'inline-block',\r\n    position: 'absolute',\r\n    top: '-1.3rem',\r\n    left: ({ seekTarget }) => `calc(${seekTarget}% - 18px)`,\r\n    opacity: ({ previewEnabled }) => previewEnabled ? 1 : 0,\r\n    background: 'radial-gradient(#0003, transparent)',\r\n    padding: theme.spacing(0, 2),\r\n    borderRadius: 100,\r\n  },\r\n}));\r\n\r\nconst TimePreview = observer(() => {\r\n  const videoStore = useContext(VideoPlayerContext);\r\n  const classes = usePreviewStyles({ \r\n    seekTarget: videoStore.seekHoverPositionPercentClamped,\r\n    previewEnabled: videoStore.previewPeekIsActive,\r\n  });\r\n\r\n  return (\r\n    <div className={classes.timePreview}> \r\n      <Typography\r\n        variant=\"body2\" \r\n        color=\"secondary\"\r\n      >\r\n        {formatSecondsToTimeDuration(videoStore.seekHoverPositionSeconds)}\r\n      </Typography>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default TimePreview;","import { useContext } from 'react';\r\nimport clsx from 'clsx';\r\nimport { observer } from 'mobx-react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nimport { formatSecondsToTimeDuration } from '../utils/functions';\r\nimport { VideoPlayerContext } from './VideoPlayer';\r\nimport TimePreview from './TimePreview';\r\n\r\nconst useProgressStyles = makeStyles({\r\n  top: {\r\n    position: 'relative',\r\n    marginLeft: ({ marginX }) => marginX,\r\n    marginRight: ({ marginX }) => marginX,\r\n  },\r\n  progressContainer: {\r\n    position: 'relative',\r\n    height: 16,\r\n  },\r\n  seekPreview: {\r\n    top: '50%',\r\n    position: 'absolute',\r\n    height: ({ previewEnabled }) => previewEnabled ? 5 : 3,\r\n    marginTop: ({ previewEnabled }) => previewEnabled ? -2.5 : -1.5,\r\n    left: 0,\r\n    width: ({ seekTarget }) => `${seekTarget}%`,\r\n    zIndex: -1,\r\n    background: '#666',\r\n  },\r\n  root: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    padding: 0,\r\n    height: 16,\r\n  },\r\n  thumb: {\r\n    top: '50%',\r\n    marginTop: -6,\r\n    '&:focus, &:hover, &$active': {\r\n      boxShadow: 'unset',\r\n    },\r\n  },\r\n  hide: {\r\n    opacity: 0,\r\n  },\r\n  active: { },\r\n  smoothMove: {\r\n    transition: 'all 0.25s linear',\r\n    transitionProperty: 'width, left',\r\n  },\r\n  track: ({ previewEnabled }) => ({\r\n    top: '50%',\r\n    height: previewEnabled ? 5 : 3,\r\n    marginTop: previewEnabled ? -2.5 : -1.5,\r\n    pointerEvents: 'none',\r\n  }),\r\n  rail: ({ previewEnabled }) => ({\r\n    top: '50%',\r\n    height: previewEnabled ? 5 : 3,\r\n    marginTop: previewEnabled ? -2.5 : -1.5,\r\n    backgroundColor: 'gray',\r\n    opacity: 0.4,\r\n  }),\r\n});\r\n\r\nconst VideoProgress = observer(() => {\r\n  const videoStore = useContext(VideoPlayerContext);\r\n  const classes = useProgressStyles({ \r\n    seekTarget: videoStore.seekHoverPositionPercent,\r\n    marginX: videoStore.progressMarginPixels,\r\n    previewEnabled: videoStore.previewPeekIsActive,\r\n  });\r\n\r\n  return (\r\n    <div className={classes.top}>\r\n      <TimePreview />\r\n      \r\n      <div className={classes.progressContainer}>\r\n        <Slider\r\n          onMouseMove={videoStore.handlePreviewSeek}\r\n          onMouseLeave={videoStore.cancelPreviewSeek}\r\n          onMouseEnter={videoStore.startPreviewSeek}\r\n          onChange={videoStore.handleSeek}\r\n          onChangeCommitted={videoStore.handleSeek}\r\n          component=\"div\"\r\n          classes={{\r\n            root: classes.root,\r\n            active: classes.active,\r\n            rail: classes.rail,\r\n            track: clsx(\r\n              classes.track, \r\n              !videoStore.seekIsPending && classes.smoothMove,\r\n            ),\r\n            thumb: clsx(\r\n              classes.thumb, \r\n              !videoStore.seekIsPending && classes.smoothMove, \r\n              !videoStore.previewPeekIsActive && classes.hide,\r\n            ),\r\n          }}\r\n          min={0}\r\n          step={0.01}\r\n          max={videoStore.durationSeconds}\r\n          valueLabelDisplay=\"off\"\r\n          getAriaValueText={formatSecondsToTimeDuration}\r\n          aria-label=\"progress-slider\"\r\n          value={videoStore.currentPositionSeconds}\r\n        />\r\n\r\n        <div className={classes.seekPreview} />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default VideoProgress;","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst useControlStyles = makeStyles({\r\n  iconRoot: {\r\n    padding: 0,\r\n    '&:hover': {\r\n      backgroundColor: 'unset',\r\n    }\r\n  }\r\n});\r\n\r\nconst VideoControlButton = ({ children, onClick, ...otherProps }) => {\r\n  const classes = useControlStyles();\r\n\r\n  return (\r\n    <IconButton \r\n      classes={{ root: classes.iconRoot}} \r\n      disableFocusRipple \r\n      disableRipple\r\n      onClick={onClick}\r\n      color=\"secondary\"\r\n    >\r\n      {React.cloneElement(React.Children.only(children), otherProps)}\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default VideoControlButton;","import { useContext } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Slider from '@material-ui/core/Slider';\r\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nimport VideoControlButton from './VideoControlButton';\r\nimport { VideoPlayerContext } from './VideoPlayer';\r\n\r\n\r\nconst useVolumeStyles = makeStyles((theme) => ({\r\n  wrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    margin: theme.spacing(0, 2),\r\n  }\r\n}));\r\n\r\nconst useSliderStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'inline-block',\r\n    margin: theme.spacing(0, 2, 0, 4),\r\n  },\r\n  track: {\r\n    height: 4,\r\n  },\r\n  rail: {\r\n    height: 4,\r\n    backgroundColor: 'gray',\r\n  },\r\n  thumb: {\r\n    marginTop: -4,\r\n    '&:focus, &:hover, &$active': {\r\n      boxShadow: 'unset',\r\n    }\r\n  },\r\n}));\r\n\r\nconst useSliderContainerStyles = makeStyles({\r\n  container: {\r\n    width: ({ pointerIsHovering }) => pointerIsHovering ? 76 : 0,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    transition: 'width .2s cubic-bezier(0.4, 0.0, 1, 1)',\r\n    overflow: 'hidden',\r\n  },\r\n});\r\n\r\nconst VolumeControl = observer(() => {\r\n  const volumeClasses = useVolumeStyles();\r\n  const videoStore = useContext(VideoPlayerContext);\r\n\r\n  const sliderClasses = useSliderStyles();\r\n  const sliderContainerClasses = useSliderContainerStyles({ \r\n    pointerIsHovering: videoStore.pointerIsHovering \r\n  });\r\n\r\n  return (\r\n    <div \r\n      className={volumeClasses.wrapper}\r\n      onMouseEnter={videoStore.handleVolumeOnHover}\r\n    >\r\n      <VideoControlButton \r\n        edge=\"end\" \r\n        aria-label=\"volume\"\r\n        onClick={videoStore.toggleVolume}\r\n      >\r\n        {(videoStore.volumeLevel <= 0 || videoStore.volumeIsMuted) \r\n          ? <VolumeOffIcon />\r\n          : (videoStore.volumeLevel >= 0.5) \r\n            ? <VolumeUpIcon />\r\n            : <VolumeDownIcon />\r\n        }\r\n      </VideoControlButton>\r\n\r\n      <div className={sliderContainerClasses.container}>\r\n        <Slider\r\n          classes={sliderClasses}\r\n          min={0}\r\n          step={0.01}\r\n          max={1}\r\n          color=\"secondary\"\r\n          onChange={videoStore.handleVolumeChange}\r\n          valueLabelDisplay=\"off\"\r\n          aria-label=\"volume-slider\"\r\n          value={videoStore.volumeIsMuted ? 0 : videoStore.volumeLevel} \r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default VolumeControl;","import { useCallback, useContext, useEffect, useState } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport {\r\n  usePopupState,\r\n  bindToggle,\r\n  bindMenu,\r\n} from 'material-ui-popup-state/hooks'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\nimport VideoControlButton from './VideoControlButton';\r\nimport { VideoPlayerContext } from './VideoPlayer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  menuPaper: {\r\n    maxHeight: ({ maxHeight }) => maxHeight,\r\n    backgroundColor: '#000d',\r\n    '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n  iconRoot: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst playbackSpeeds = [0.25, 0.5, 0.75, 1, 1.25, 1.5, 1.75, 2];\r\n\r\nconst SettingsControl = observer(({ aboveControlsRef }) => {\r\n  const videoStore = useContext(VideoPlayerContext);\r\n  const popupState = usePopupState({ variant: 'popover', popupId: 'settingsMenu' });\r\n  const [selectedItemIndex, setSelectedItemIndex] = useState(3);\r\n  \r\n  let clampedMinMaxAvailableContainerHeight = 500;\r\n  if (aboveControlsRef) {\r\n    const clampedMaxAvailableContainerHeight = Math.min(aboveControlsRef.clientHeight - 10, 500);\r\n    clampedMinMaxAvailableContainerHeight = Math.max(50, clampedMaxAvailableContainerHeight);\r\n  }\r\n\r\n  const classes = useStyles({ maxHeight: clampedMinMaxAvailableContainerHeight });\r\n\r\n  useEffect(() => {\r\n    if (!aboveControlsRef) return void(0);\r\n\r\n    popupState.setAnchorEl(aboveControlsRef);\r\n  }, [popupState, aboveControlsRef]);\r\n\r\n  const makeOnMenuItemClick = useCallback((speed, index) => (event) => {\r\n    setSelectedItemIndex(index);\r\n    videoStore.handlePlaybackSpeedChange(speed);\r\n    popupState.close();\r\n  }, [popupState, videoStore, setSelectedItemIndex]);\r\n\r\n  return (\r\n    <div>\r\n      <VideoControlButton \r\n        edge=\"end\"\r\n        aria-label=\"settings\" \r\n        {...bindToggle(popupState)}\r\n      >\r\n        <SettingsIcon />\r\n      </VideoControlButton>\r\n      <Menu \r\n        {...bindMenu(popupState)}\r\n        variant=\"menu\"\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n        transformOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n        classes={{ paper: classes.menuPaper }}\r\n        disablePortal={true}\r\n        keepMounted={true}\r\n      >\r\n        <MenuItem \r\n          divider={true} \r\n          onClick={popupState.close}\r\n        >\r\n          <ListItemText \r\n            primaryTypographyProps={{ variant: \"body2\" }} \r\n            primary=\"Playback Speed\" \r\n          />\r\n        </MenuItem>\r\n\r\n        {playbackSpeeds.map((speed, index) => {\r\n          const textContent = (speed === 1) ? 'Normal' : speed.toString().padStart(3, ' ');\r\n          const isSelected = (selectedItemIndex === index);\r\n\r\n          return (\r\n            <MenuItem\r\n              key={textContent}\r\n              onClick={makeOnMenuItemClick(speed, index)}\r\n            >\r\n              <CheckIcon \r\n                color=\"secondary\" \r\n                classes={{ root: classes.iconRoot }} \r\n                style={{ opacity: isSelected ? 1 : 0 }}\r\n              />\r\n              <ListItemText \r\n                primaryTypographyProps={{ variant: \"body2\" }} \r\n                primary={textContent} \r\n              />\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Menu>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default SettingsControl;","import { useContext } from 'react';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\n\r\nimport VideoControlButton from './VideoControlButton';\r\nimport { VideoPlayerContext } from './VideoPlayer';\r\n\r\n\r\nconst FullScreenControl = observer(() => {\r\n  const videoStore = useContext(VideoPlayerContext);\r\n\r\n  return (\r\n    <VideoControlButton \r\n      onClick={videoStore.handleFullscreen}\r\n      aria-label=\"full-screen\"\r\n    >\r\n      {videoStore.fullscreenIsActive \r\n        ? <FullscreenExitIcon fontSize=\"large\"/> \r\n        : <FullscreenIcon fontSize=\"large\"/>\r\n      }\r\n    </VideoControlButton>\r\n  );\r\n});\r\n\r\nexport default FullScreenControl;","import { useContext } from 'react';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\n\r\nimport VideoControlButton from './VideoControlButton';\r\nimport { VideoPlayerContext } from './VideoPlayer';\r\n\r\n\r\nconst PlaybackControl = observer(() => {\r\n  const videoStore = useContext(VideoPlayerContext);\r\n\r\n  return (\r\n    <VideoControlButton \r\n      onClick={videoStore.handlePlayPause} \r\n      edge=\"end\" \r\n      aria-label=\"play or pause\"\r\n    >\r\n      {(videoStore.videoIsPlaying)\r\n        ? <PauseIcon fontSize=\"large\"/> \r\n        : <PlayArrowIcon fontSize=\"large\"/>}\r\n    </VideoControlButton>\r\n  );\r\n});\r\n\r\nexport default PlaybackControl;","import { useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { observer } from 'mobx-react';\r\nimport clsx from 'clsx';\r\n\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\nimport PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled';\r\n\r\nimport { VideoPlayerContext } from './VideoPlayer';\r\n\r\n\r\nconst useFeedbackStyles = makeStyles({\r\n  actionFeedbackWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n    width: '100%',\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: 0,\r\n    left: 0,\r\n  },\r\n  backgroundMask: {\r\n    background: '#000a',\r\n  },\r\n  actionAnimationStart: {\r\n    fontSize: \"4rem\",\r\n    opacity: 0.3,\r\n  },\r\n  actionRestState: {\r\n    transition: 'all 0.5s ease-out',\r\n    fontSize: \"8rem\",\r\n    opacity: 0,\r\n  },\r\n});\r\n\r\nconst VideoClickFeedback = observer(() => {\r\n  const videoStore = useContext(VideoPlayerContext);\r\n  const classes = useFeedbackStyles();\r\n\r\n  const FeedbackIconType = (videoStore.videoIsPlaying)\r\n    ? PlayCircleFilledIcon \r\n    : PauseCircleFilledIcon;\r\n\r\n  return (\r\n    <div \r\n      className={clsx(\r\n        classes.actionFeedbackWrapper, \r\n        videoStore.seekIsPending && classes.backgroundMask\r\n      )}\r\n    >\r\n      <FeedbackIconType\r\n        classes={{ root: videoStore.videoClickAnimationDisplaying ? classes.actionAnimationStart : classes.actionRestState }}\r\n        color=\"secondary\"\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default VideoClickFeedback;","import { useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { formatSecondsToTimeDuration } from '../utils/functions';\r\nimport { VideoPlayerContext } from './VideoPlayer';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textWrapper: {\r\n    paddingTop: theme.spacing(1),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  textRoot: {\r\n    lineHeight: '100%',\r\n  },\r\n}));\r\n\r\nconst ElapsedTime = observer(() => {\r\n  const videoStore = useContext(VideoPlayerContext);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.textWrapper}>\r\n      <Typography\r\n        classes={{ root: classes.textRoot }}\r\n        variant=\"body2\" \r\n        color=\"secondary\"\r\n      >\r\n        {`${formatSecondsToTimeDuration(videoStore.currentPositionSeconds)} \r\n          / ${formatSecondsToTimeDuration(videoStore.durationSeconds)}`}\r\n      </Typography>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default ElapsedTime;","import { useContext, useCallback, useState, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { observer } from 'mobx-react';\r\nimport clsx from 'clsx';\r\n\r\nimport VideoProgress from './VideoProgress';\r\nimport VolumeControl from './VolumeControl';\r\nimport SettingsControl from './SettingsControl';\r\nimport FullscreenControl from './FullscreenControl';\r\nimport PlaybackControl from './PlaybackControl';\r\nimport VideoClickFeedback from './VideoClickFeedback';\r\nimport ElapsedTime from './ElapsedTime';\r\nimport { VideoPlayerContext } from './VideoPlayer';\r\n\r\n\r\nconst useVideoStyles = makeStyles((theme) => ({\r\n  controlsRoot: {\r\n    height: '100%',\r\n    width: '100%',\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: 0,\r\n    left: 0,\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    marginBottom: theme.spacing(2),\r\n    padding: theme.spacing(0, 5),\r\n  },\r\n  aboveControls: {\r\n    flexGrow: 1,\r\n  },\r\n  controlsAndProgress: {\r\n    background: 'linear-gradient(0deg, #000a, transparent)',\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    height: '100%',\r\n    position: 'relative',\r\n    zIndex: 2,\r\n  },\r\n  controlsAndProgressActive: {\r\n    opacity: 1,\r\n  },\r\n  controlsAndProgressIdle: {\r\n    transition: 'all 0.2s linear',\r\n    opacity: 0,\r\n  },\r\n  cursorOn: {\r\n    cursor: 'auto',\r\n  },\r\n  cursorOff: {\r\n    transition: 'all 0.2s linear',\r\n    cursor: 'none',\r\n  },\r\n  controlGroup: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  }, \r\n}));\r\n\r\nconst VideoControls = observer(() => {\r\n  const classes = useVideoStyles();\r\n  const videoStore = useContext(VideoPlayerContext);\r\n  const pendingControlHideHandler = useRef(null);\r\n  const [aboveControlsRef, setAboveControlsRef] = useState(null);\r\n\r\n  const activateControlsHandler = useCallback(() => {\r\n    // Cancel any existing scheduled hiding of video controls\r\n    pendingControlHideHandler?.current?.cancel();\r\n\r\n    const pendingHideHandle = videoStore.setUserAsActive.call(videoStore);\r\n    pendingHideHandle.catch(() => null);\r\n    pendingControlHideHandler.current = pendingHideHandle;\r\n  }, [videoStore, pendingControlHideHandler]);\r\n\r\n  const hideControlsHandler = useCallback(() => {\r\n    // Cancel any existing scheduled hiding of video controls\r\n    pendingControlHideHandler?.current?.cancel();\r\n\r\n    videoStore.setUserAsIdle();\r\n  }, [videoStore, pendingControlHideHandler]);\r\n\r\n  return (\r\n    <div \r\n      onMouseLeave={hideControlsHandler}\r\n      onMouseEnter={activateControlsHandler}\r\n      onClick={activateControlsHandler}\r\n      onMouseMove={activateControlsHandler}\r\n      onTouchMove={activateControlsHandler}\r\n      onTouchStart={activateControlsHandler}\r\n      className={clsx(\r\n        classes.controlsRoot,\r\n        videoStore.userIsIdle ? classes.cursorOff : classes.cursorOn\r\n      )}\r\n    >\r\n      <VideoClickFeedback />\r\n\r\n      <div className={clsx(\r\n          classes.container,\r\n          videoStore.userIsIdle ? classes.controlsAndProgressIdle : classes.controlsAndProgressActive,\r\n        )}\r\n      >\r\n        <div \r\n          className={classes.aboveControls} \r\n          ref={setAboveControlsRef}\r\n          onClick={videoStore.handleVideoClick.bind(videoStore)}\r\n        />\r\n\r\n        <div className={classes.controlsAndProgress}>\r\n          <VideoProgress />\r\n\r\n          <div className={classes.buttons}>\r\n            <div \r\n              className={classes.controlGroup}\r\n              onMouseLeave={videoStore.handleVolumeOnHoverExit}\r\n            >\r\n              <PlaybackControl />\r\n              <VolumeControl />\r\n              <ElapsedTime />\r\n            </div>\r\n\r\n            <div className={classes.controlGroup}>\r\n              <SettingsControl aboveControlsRef={aboveControlsRef} />\r\n              <FullscreenControl />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default VideoControls;","import { makeAutoObservable, configure } from 'mobx';\r\nimport fscreen from 'fscreen';\r\nimport { delayMsAsync } from '../utils/functions';\r\n\r\nconfigure({\r\n  enforceActions: \"always\",\r\n  computedRequiresReaction: true,\r\n  reactionRequiresObservable: true,\r\n  observableRequiresReaction: true,\r\n  disableErrorBoundaries: true\r\n});\r\n\r\nclass VideoStore {\r\n  videoElement = null;\r\n  videoContainer = null;\r\n  progressMarginPixels = 16;\r\n\r\n  constructor() {\r\n    this.setInitialState();\r\n\r\n    makeAutoObservable(this, {\r\n      videoElement: false,\r\n      videoContainer: false,\r\n      setVideoElement: false,\r\n      cleanUp: false,\r\n      videoWasPlayingBeforeSeek: false,\r\n      progressMarginPixels: false,\r\n    });\r\n  }\r\n\r\n  setInitialState = () => {\r\n    this.videoIsPlaying = false;\r\n    this.volumeLevel = 1;\r\n    this.volumeIsMuted = false;\r\n    this.currentPositionSeconds = 0;\r\n    this.durationSeconds = 0;\r\n    this.fullscreenIsActive = false;\r\n    this.videoClickAnimationDisplaying = false;\r\n    this.userIsIdle = false;\r\n    this.seekIsPending = false;\r\n    this.videoWasPlayingBeforeSeek = false;\r\n    this.seekHoverPositionPercent = 0;\r\n    this.previewPeekIsActive = false;\r\n    this.pointerIsHovering = false;\r\n  };\r\n\r\n  setVideoElement = (videoElement) => {\r\n    this.videoElement = videoElement;\r\n    videoElement.addEventListener('loadedmetadata', this.updateDuration);\r\n    videoElement.addEventListener('timeupdate', this.updateTime);\r\n    videoElement.addEventListener('ended', this.handleEnd);\r\n  };\r\n\r\n  setVideoContainer = (videoContainer) => {\r\n    this.videoContainer = videoContainer;\r\n  };\r\n  \r\n  cleanUp = () => {\r\n    this.videoElement.removeEventListener('loadedmetadata', this.updateDuration);\r\n    this.videoElement.removeEventListener('timeupdate', this.updateTime);\r\n    this.videoElement.removeEventListener('ended', this.handleEnd);\r\n\r\n    this.videoElement = null;\r\n    this.videoContainer = null;\r\n  };\r\n\r\n  setUserAsIdle = () => {\r\n    if (this.videoIsPlaying) {\r\n      this.userIsIdle = true;\r\n    }\r\n  };\r\n\r\n  handleEnd = () => {\r\n    this.videoIsPlaying = false;\r\n  };\r\n\r\n  updateTime = () => {\r\n    if (!this.videoElement) return;\r\n\r\n    // In some mobile browsers, when loadedmetadata is raised, if it is raised at all,\r\n    // the duration may not have the correct value, or even any value at all so we\r\n    // check again here\r\n    if (!this.durationSeconds) this.updateDuration();\r\n\r\n    this.currentPositionSeconds = this.videoElement.currentTime;\r\n  };\r\n\r\n  updateDuration = () => {\r\n    if (!this.videoElement) return;\r\n\r\n    this.durationSeconds = Math.floor(this.videoElement.duration);\r\n  };\r\n\r\n  handlePlayPause = () => {\r\n    if (!this.videoElement) return;\r\n\r\n    if (this.videoElement.paused || this.videoElement.ended) {\r\n      this.videoElement.play();\r\n      this.videoIsPlaying = true;\r\n    } else {\r\n      this.videoElement.pause();\r\n      this.videoIsPlaying = false;\r\n    }\r\n  };\r\n\r\n  handlePreviewSeek = (event) => {\r\n    if (!this.videoContainer || event.target.offsetWidth < 15) return;\r\n\r\n    const progressLeftOffset = this.videoContainer.offsetLeft + this.progressMarginPixels;\r\n    this.seekHoverPositionPercent = (event.pageX - progressLeftOffset) * 100 / event.target.offsetWidth;\r\n  };\r\n\r\n  get seekHoverPositionSeconds() {\r\n    return this.seekHoverPositionPercent * this.durationSeconds / 100;\r\n  }\r\n\r\n  get seekHoverPositionPercentClamped() {\r\n    return Math.max(5, Math.min(this.seekHoverPositionPercent, 95));\r\n  }\r\n\r\n  startPreviewSeek = (event) => {\r\n    this.handlePreviewSeek(event);\r\n    this.previewPeekIsActive = true;\r\n  };\r\n\r\n  cancelPreviewSeek = () => {\r\n    this.seekHoverPositionPercent = 0;\r\n    this.previewPeekIsActive = false;\r\n  };\r\n\r\n  handleSeek = (event, newPosition) => {\r\n    if (!this.videoElement || !['mousedown', 'mouseup', 'mousemove'].includes(event.type)) return;\r\n\r\n    const isMouseDown = (event.type === 'mousedown');\r\n    const isMouseUp = (event.type === 'mouseup');\r\n\r\n    if (isMouseDown) {\r\n      if (this.videoIsPlaying) {\r\n        this.videoElement.pause();\r\n        this.videoIsPlaying = false;\r\n        this.videoWasPlayingBeforeSeek = true;\r\n      } else {\r\n        this.videoWasPlayingBeforeSeek = false;\r\n      }\r\n      this.seekIsPending = true;\r\n    } else if (isMouseUp) {\r\n      if (this.videoWasPlayingBeforeSeek) {\r\n        this.videoElement.play();\r\n        this.videoIsPlaying = true;\r\n      }\r\n      this.seekIsPending = false;\r\n    }\r\n\r\n    // Update position on mouse down, up and move events\r\n    this.videoElement.currentTime = newPosition;\r\n  };\r\n\r\n  handleFullscreen = () => {\r\n    if (fscreen.fullscreenEnabled && this.videoContainer) {\r\n      if (this.fullscreenIsActive && fscreen.fullscreenElement) {\r\n        fscreen.exitFullscreen();\r\n        this.fullscreenIsActive = false;\r\n        document.documentElement.style.fontSize = \"100%\";\r\n      } else {\r\n        fscreen.requestFullscreen(this.videoContainer);\r\n        this.fullscreenIsActive = true;\r\n        document.documentElement.style.fontSize = \"150%\";\r\n      }\r\n    }\r\n  };\r\n\r\n  handleVolumeChange = (event, newVolume) => {\r\n    if (!this.videoElement || newVolume < 0 || newVolume > 1 || !Number.isFinite(newVolume)) return;\r\n\r\n    this.videoElement.volume = newVolume;\r\n    this.volumeLevel = newVolume;\r\n  };\r\n\r\n  toggleVolume = () => {\r\n    if (!this.videoElement) return;\r\n    \r\n    this.volumeIsMuted = !this.volumeIsMuted;\r\n    this.videoElement.muted = this.volumeIsMuted;\r\n  };\r\n \r\n  handlePlaybackSpeedChange = (speed) => {\r\n    if (!this.videoElement) return;\r\n    this.videoElement.playbackRate = speed;\r\n  };\r\n\r\n  handleVolumeOnHover = () => {\r\n    this.pointerIsHovering = true;\r\n  }\r\n\r\n  handleVolumeOnHoverExit = () => {\r\n    this.pointerIsHovering = false;\r\n  }\r\n\r\n  *handleVideoClick() {\r\n    this.handlePlayPause();\r\n    this.videoClickAnimationDisplaying = true;\r\n    \r\n    yield delayMsAsync(0);\r\n    this.videoClickAnimationDisplaying = false;\r\n  };\r\n\r\n  *setUserAsActive() {\r\n    this.userIsIdle = false;\r\n\r\n    yield delayMsAsync(4000);\r\n\r\n    this.setUserAsIdle();\r\n  };\r\n}\r\n\r\nexport default VideoStore;","import { createContext, useRef, useEffect, useState } from \"react\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport VideoControls from './VideoControls';\r\nimport VideoStore from '../store/VideoStore';\r\n\r\nconst useStyles = makeStyles({\r\n  videoContainer: {\r\n    position: 'relative',\r\n    border: '2px solid #555',\r\n  },\r\n  video: {\r\n    display: 'block',\r\n    objectFit: 'contain',\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nexport const VideoPlayerContext = createContext();\r\n\r\nconst Video = ({\r\n  posterUrl = '',\r\n  manualDownloadUrl = '',\r\n  sourceList = [],\r\n}) => {\r\n  const classes = useStyles();\r\n  const videoElementRef = useRef();\r\n  const videoContainerRef = useRef();\r\n\r\n  // Lazy initialization of a single videoStore instance per mounted component\r\n  const [videoStore] = useState(() => new VideoStore());\r\n\r\n  useEffect(() => {\r\n    if (videoElementRef.current) {\r\n      videoStore.setVideoElement(videoElementRef.current);\r\n    }\r\n\r\n    if (videoContainerRef.current) {\r\n      videoStore.setVideoContainer(videoContainerRef.current);\r\n    }\r\n\r\n    return videoStore.cleanUp;\r\n  }, [videoStore]);\r\n\r\n  // Reset store state if the video content changes\r\n  useEffect(() => {\r\n    videoStore.setInitialState();\r\n  }, [sourceList, videoStore]);\r\n\r\n  return (\r\n    <div \r\n      className={classes.videoContainer}\r\n      ref={videoContainerRef}\r\n    >\r\n      <VideoPlayerContext.Provider value={videoStore} >\r\n        <video\r\n          id=\"video\"\r\n          ref={videoElementRef}\r\n          className={classes.video}\r\n          preload=\"metadata\"\r\n          poster={posterUrl}\r\n        >\r\n          {sourceList.map(source => {\r\n            const { url, type } = source;\r\n            return (\r\n              <source key={url} src={url} type={type} />\r\n            );\r\n          })}\r\n\r\n          <a href={manualDownloadUrl}>Download Video</a>\r\n        </video>\r\n\r\n        <VideoControls />\r\n      </VideoPlayerContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Video;\r\n","import Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport VideoPlayer from './components/VideoPlayer';\n\nconst useStyles = makeStyles((theme) => ({\n  topContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  videoContainer: {\n    margin: theme.spacing(15, 'auto'),\n    height: 360,\n    width: 640,\n  },\n  title: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n}));\n\n\nconst App = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.topContainer}>\n      <div className={classes.videoContainer}>\n        <VideoPlayer \n          posterUrl={process.env.PUBLIC_URL + \"/preview/video.jpg\"}\n          manualDownloadUrl={process.env.PUBLIC_URL + \"/video/video.mp4\"}\n          sourceList={[{\n              url: process.env.PUBLIC_URL + \"/video/video.mp4\",\n              type: \"video/mp4\",\n            }\n          ]}\n        />\n\n        <div className={classes.title}>\n          <Typography variant=\"h4\" gutterBottom>\n            Big Buck Bunny\n          </Typography>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      '@global': {\r\n        /* The emerging W3C standard that is currently Firefox-only */\r\n        '*': {\r\n          scrollbarColor: '#424242 #8e8e8e',\r\n        },\r\n        /* Works on Chrome/Edge/Safari */\r\n        '*::-webkit-scrollbar': {\r\n          width: 10,\r\n        },\r\n        '*::-webkit-scrollbar-track': {\r\n          background: '#424242',\r\n        },\r\n        '*::-webkit-scrollbar-thumb': {\r\n          backgroundColor: '#8e8e8e',\r\n          borderRadius: 4,\r\n        }\r\n      }\r\n    }\r\n  },\r\n  spacing: 4,\r\n  palette: {\r\n    primary: {\r\n      main: '#ff5722',\r\n    },\r\n    secondary: {\r\n      main: '#ffffff',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#ccbfa0',\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}