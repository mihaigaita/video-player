{"version":3,"sources":["utils/functions.ts","components/TimePreview.tsx","components/SeekPreview.tsx","components/VideoProgress.tsx","components/VideoControlButton.tsx","components/VolumeControl.tsx","components/SettingsControl.tsx","components/FullscreenControl.tsx","components/PlaybackControl.tsx","components/VideoClickFeedback.tsx","components/ElapsedTime.tsx","components/VideoControls.tsx","store/VideoStore.ts","components/VideoPlayer.tsx","App.tsx","theme.ts","index.tsx"],"names":["formatSecondsToTimeDuration","value","hours","Math","floor","minutes","seconds","hoursText","minutesSecondsText","toString","padStart","delayMsAsync","ms","Promise","resolve","setTimeout","usePreviewStyles","makeStyles","theme","root","display","position","top","background","padding","spacing","borderRadius","observer","videoStore","React","VideoPlayerContext","classes","rootStyles","left","seekHoverPositionPercentClamped","opacity","previewPeekIsActive","className","style","Typography","variant","color","seekHoverPositionSeconds","seekPreview","height","marginTop","zIndex","width","seekHoverPositionPercent","useGeneralStyles","margin","progressContainer","useProgressStyles","thumb","boxShadow","previewEnabled","active","track","pointerEvents","rail","backgroundColor","progressStyleInputs","progressClasses","generalClasses","Slider","onMouseMove","handlePreviewSeek","onMouseLeave","cancelPreviewSeek","onMouseEnter","startPreviewSeek","onChange","handleSeek","onChangeCommitted","min","step","max","durationSeconds","valueLabelDisplay","getAriaValueText","aria-label","currentPositionSeconds","useControlStyles","VideoControlButton","children","onClick","otherProps","IconButton","disableFocusRipple","disableRipple","only","useVolumeStyles","wrapper","alignItems","useSliderStyles","useSliderContainerStyles","container","transition","overflow","volumeClasses","sliderClasses","sliderContainerClasses","pointerIsHovering","sliderContainerStyle","handleVolumeOnHover","edge","toggleVolume","volumeLevel","volumeIsMuted","handleVolumeChange","useMenuStyles","paper","palette","common","white","useIconStyles","marginRight","playbackSpeeds","anchorOrigin","vertical","horizontal","transformOrigin","listItemTypographyVariant","opacityOnStyle","opacityOffStyle","aboveControlsRef","popupState","usePopupState","popupId","selectedItemIndex","setSelectedItemIndex","clampedMinMaxAvailableContainerHeight","clampedMaxAvailableContainerHeight","clientHeight","paperStyles","maxHeight","menuClasses","iconClasses","setAnchorEl","makeOnMenuItemClick","speed","index","event","handlePlaybackSpeedChange","close","bindToggle","Menu","bindMenu","getContentAnchorEl","disablePortal","keepMounted","MenuItem","divider","ListItemText","primaryTypographyProps","primary","map","textContent","isSelected","itemOnClick","handleFullscreen","fullscreenIsActive","fontSize","handlePlayPause","videoIsPlaying","useFeedbackStyles","actionFeedbackWrapper","justifyContent","backgroundMask","actionAnimationStart","actionRestState","videoClickAnimationDisplaying","FeedbackIconType","PlayCircleFilledIcon","PauseCircleFilledIcon","clsx","seekIsPending","useContainerStyles","paddingTop","useTextStyles","lineHeight","wrapperClasses","textClasses","useVideoStyles","controlsRoot","buttons","marginBottom","aboveControls","flexGrow","controlsAndProgress","flexDirection","controlsAndProgressActive","controlsAndProgressIdle","cursorOn","cursor","cursorOff","controlGroup","pendingControlHideHandler","setAboveControlsRef","activateControlsHandler","current","cancel","pendingHideHandle","flowResult","setUserAsActive","catch","hideControlsHandler","setUserAsIdle","onTouchMove","onTouchStart","userIsIdle","ref","handleVideoClick","handleVolumeOnHoverExit","FullscreenControl","configure","enforceActions","computedRequiresReaction","reactionRequiresObservable","observableRequiresReaction","disableErrorBoundaries","VideoStore","videoElement","videoContainer","videoWasPlayingBeforeSeek","setInitialState","handleVideoClickFlow","bind","setUserAsActiveFlow","setVideoElement","addEventListener","updateDuration","handleEnd","setVideoContainer","fscreen","handleFullscreenChange","cleanUp","removeEventListener","updateTime","currentTime","paused","ended","window","requestAnimationFrame","duration","play","pause","currentTarget","getBoundingClientRect","pageX","newTime","includes","type","isMouseDown","isMouseUp","fullscreenEnabled","fullscreenElement","exitFullscreen","requestFullscreen","document","documentElement","newVolume","Number","isFinite","volume","muted","playbackRate","this","makeAutoObservable","hoverTime","currentTimePercent","hoverPercent","useStyles","border","video","objectFit","VideoPlayer","posterUrl","manualDownloadUrl","sourceList","videoElementRef","videoContainerRef","videoStoreRef","getStore","Provider","id","preload","poster","source","url","src","href","topContainer","title","App","process","gutterBottom","createMuiTheme","overrides","MuiCssBaseline","scrollbarColor","main","secondary","error","red","A400","default","ReactDOM","ThemeProvider","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.be12f026.chunk.js","sourcesContent":["const formatSecondsToTimeDuration = (value: number): string => {\r\n  if (value < 0 || value >= 24 * 60 * 60) return 'N/A';\r\n\r\n  const hours = Math.floor(value / 60 / 24);\r\n  const minutes = Math.floor(value / 60 % 24);\r\n  const seconds = Math.floor(value % 60);\r\n\r\n  const hoursText = hours ? `${hours}:` : '';\r\n  const minutesSecondsText = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n\r\n  return `${hoursText}${minutesSecondsText}`;\r\n};\r\n\r\nconst delayMsAsync = (ms: number): Promise<number> => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\nconst delayNextFrame = (): Promise<number> => new Promise(window.requestAnimationFrame);\r\n\r\nexport {\r\n  formatSecondsToTimeDuration,\r\n  delayMsAsync,\r\n  delayNextFrame,\r\n};","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { formatSecondsToTimeDuration } from '../utils/functions';\r\nimport { VideoPlayerContext } from './VideoPlayer';\r\n\r\nconst usePreviewStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'inline-block',\r\n    position: 'absolute',\r\n    top: '-1.3rem',\r\n    background: 'radial-gradient(#0003, transparent)',\r\n    padding: theme.spacing(0, 2),\r\n    borderRadius: 100,\r\n  },\r\n}));\r\n\r\nconst TimePreview: React.FC<{}> = () => {\r\n  const videoStore = React.useContext(VideoPlayerContext);\r\n  const classes = usePreviewStyles();\r\n  \r\n  const rootStyles = {\r\n    left: `calc(${videoStore.seekHoverPositionPercentClamped}% - 18px)`,\r\n    opacity: videoStore.previewPeekIsActive ? 1 : 0,\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className={classes.root}\r\n      style={rootStyles}\r\n    > \r\n      <Typography\r\n        variant=\"body2\" \r\n        color=\"secondary\"\r\n      >\r\n        {formatSecondsToTimeDuration(videoStore.seekHoverPositionSeconds)}\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(TimePreview);","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { VideoPlayerContext } from './VideoPlayer';\r\n\r\n\r\nconst usePreviewStyles = makeStyles({\r\n  seekPreview: {\r\n    top: '50%',\r\n    position: 'absolute',\r\n    height: 5,\r\n    marginTop: -2.5,\r\n    left: 0,\r\n    zIndex: -1,\r\n    background: '#666',\r\n  },\r\n});\r\n\r\nconst SeekPreview: React.FC<{}> = () => {\r\n  const videoStore = React.useContext(VideoPlayerContext);\r\n  const classes = usePreviewStyles();\r\n\r\n  return (\r\n    <div \r\n      className={classes.seekPreview}\r\n      style={{ width: `${videoStore.seekHoverPositionPercent}%` }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default observer(SeekPreview);","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nimport { formatSecondsToTimeDuration } from '../utils/functions';\r\nimport { VideoPlayerContext } from './VideoPlayer';\r\nimport TimePreview from './TimePreview';\r\nimport SeekPreview from './SeekPreview';\r\n\r\n\r\nconst useGeneralStyles = makeStyles(theme => ({\r\n  top: {\r\n    position: 'relative',\r\n    margin: theme.spacing(0, 4),\r\n  },\r\n  progressContainer: {\r\n    position: 'relative',\r\n    height: 16,\r\n  },\r\n}));\r\n\r\ntype ProgressStyleInputs = {\r\n  previewEnabled: boolean,\r\n};\r\n\r\nconst useProgressStyles = makeStyles<Theme, ProgressStyleInputs>({\r\n  root: {\r\n    display: 'block',\r\n    position: 'absolute',\r\n    top: 0,\r\n    padding: 0,\r\n    height: 16,\r\n  },\r\n  thumb: {\r\n    top: '50%',\r\n    marginTop: -6,\r\n    '&:focus, &:hover, &$active': {\r\n      boxShadow: 'unset',\r\n    },\r\n    opacity: ({ previewEnabled }) => previewEnabled ? 1 : 0,\r\n  },\r\n  active: {},\r\n  track: {\r\n    top: '50%',\r\n    height: ({ previewEnabled }) => previewEnabled ? 5 : 3,\r\n    marginTop: ({ previewEnabled }) => previewEnabled ? -2.5 : -1.5,\r\n    pointerEvents: 'none',\r\n  },\r\n  rail: {\r\n    top: '50%',\r\n    height: ({ previewEnabled }) => previewEnabled ? 5 : 3,\r\n    marginTop: ({ previewEnabled }) => previewEnabled ? -2.5 : -1.5,\r\n    backgroundColor: 'gray',\r\n    opacity: 0.4,\r\n  },\r\n});\r\n\r\nconst VideoProgress: React.FC<{}> = () => {\r\n  const videoStore = React.useContext(VideoPlayerContext);\r\n\r\n  const progressStyleInputs: ProgressStyleInputs = React.useMemo(() => ({\r\n    previewEnabled: videoStore.previewPeekIsActive,\r\n  }), [videoStore.previewPeekIsActive]);\r\n\r\n  const progressClasses = useProgressStyles(progressStyleInputs);\r\n  const generalClasses = useGeneralStyles();\r\n\r\n  return (\r\n    <div className={generalClasses.top}>\r\n      <TimePreview />\r\n      \r\n      <div className={generalClasses.progressContainer}>\r\n        <Slider\r\n          onMouseMove={videoStore.handlePreviewSeek}\r\n          onMouseLeave={videoStore.cancelPreviewSeek}\r\n          onMouseEnter={videoStore.startPreviewSeek}\r\n          onChange={videoStore.handleSeek}\r\n          onChangeCommitted={videoStore.handleSeek}\r\n          classes={progressClasses}\r\n          min={0}\r\n          step={0.1}\r\n          max={videoStore.durationSeconds}\r\n          valueLabelDisplay=\"off\"\r\n          getAriaValueText={formatSecondsToTimeDuration}\r\n          aria-label=\"progress-slider\"\r\n          value={videoStore.currentPositionSeconds}\r\n        />\r\n\r\n        <SeekPreview />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(VideoProgress);","import * as React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst useControlStyles = makeStyles({\r\n  root: {\r\n    padding: 0,\r\n    '&:hover': {\r\n      backgroundColor: 'unset',\r\n    }\r\n  }\r\n});\r\n\r\ntype VideoControlButtonProps = {\r\n  children: React.ReactElement,\r\n  onClick: React.EventHandler<React.SyntheticEvent>,\r\n  [otherProps: string]: any,\r\n};\r\n\r\nconst VideoControlButton: React.FC<VideoControlButtonProps> = ({ children, onClick, ...otherProps }) => {\r\n  const classes = useControlStyles();\r\n\r\n  return (\r\n    <IconButton\r\n      classes={classes}\r\n      disableFocusRipple \r\n      disableRipple\r\n      onClick={onClick}\r\n      color=\"secondary\"\r\n    >\r\n      {React.cloneElement(React.Children.only(children), otherProps)}\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default VideoControlButton;","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Slider from '@material-ui/core/Slider';\r\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nimport VideoControlButton from './VideoControlButton';\r\nimport { VideoPlayerContext } from './VideoPlayer';\r\n\r\n\r\nconst useVolumeStyles = makeStyles((theme) => ({\r\n  wrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    margin: theme.spacing(0, 2),\r\n  }\r\n}));\r\n\r\nconst useSliderStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'inline-block',\r\n    margin: theme.spacing(0, 2, 0, 4),\r\n  },\r\n  track: {\r\n    height: 4,\r\n  },\r\n  rail: {\r\n    height: 4,\r\n    backgroundColor: 'gray',\r\n  },\r\n  thumb: {\r\n    marginTop: -4,\r\n    '&:focus, &:hover, &$active': {\r\n      boxShadow: 'unset',\r\n    }\r\n  },\r\n}));\r\n\r\nconst useSliderContainerStyles = makeStyles({\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    transition: 'width .2s cubic-bezier(0.4, 0.0, 1, 1)',\r\n    overflow: 'hidden',\r\n  },\r\n});\r\n\r\nconst VolumeControl: React.FC<{}> = () => {\r\n  const volumeClasses = useVolumeStyles();\r\n  const videoStore = React.useContext(VideoPlayerContext);\r\n\r\n  const sliderClasses = useSliderStyles();\r\n  const sliderContainerClasses = useSliderContainerStyles({ \r\n    pointerIsHovering: videoStore.pointerIsHovering \r\n  });\r\n\r\n  const sliderContainerStyle = React.useMemo(() => ({ \r\n    width: videoStore.pointerIsHovering ? 76 : 0 \r\n  }), [videoStore.pointerIsHovering]);\r\n\r\n  return (\r\n    <div \r\n      className={volumeClasses.wrapper}\r\n      onMouseEnter={videoStore.handleVolumeOnHover}\r\n    >\r\n      <VideoControlButton \r\n        edge=\"end\" \r\n        aria-label=\"volume\"\r\n        onClick={videoStore.toggleVolume}\r\n      >\r\n        {((videoStore.volumeLevel <= 0) || videoStore.volumeIsMuted) \r\n          ? <VolumeOffIcon />\r\n          : (videoStore.volumeLevel >= 0.5) \r\n            ? <VolumeUpIcon />\r\n            : <VolumeDownIcon />\r\n        }\r\n      </VideoControlButton>\r\n\r\n      <div \r\n        className={sliderContainerClasses.container} \r\n        style={sliderContainerStyle}\r\n      >\r\n        <Slider\r\n          classes={sliderClasses}\r\n          min={0}\r\n          step={0.01}\r\n          max={1}\r\n          color=\"secondary\"\r\n          onChange={videoStore.handleVolumeChange}\r\n          valueLabelDisplay=\"off\"\r\n          aria-label=\"volume-slider\"\r\n          value={videoStore.volumeIsMuted ? 0 : videoStore.volumeLevel} \r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(VolumeControl);","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport {\r\n  usePopupState,\r\n  bindToggle,\r\n  bindMenu,\r\n} from 'material-ui-popup-state/hooks'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\nimport VideoControlButton from './VideoControlButton';\r\nimport { VideoPlayerContext } from './VideoPlayer';\r\n\r\nconst useMenuStyles = makeStyles(theme => ({\r\n  paper: {\r\n    backgroundColor: '#000d',\r\n    '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n}));\r\n\r\nconst useIconStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst playbackSpeeds = [0.25, 0.5, 0.75, 1, 1.25, 1.5, 1.75, 2];\r\nconst anchorOrigin = { vertical: 'bottom' as 'bottom', horizontal: 'right' as 'right' };\r\nconst transformOrigin = { vertical: 'bottom' as 'bottom', horizontal: 'right' as 'right' };\r\nconst listItemTypographyVariant = { variant: 'body2' as 'body2' };\r\nconst opacityOnStyle = { opacity: 1 };\r\nconst opacityOffStyle = { opacity: 0 };\r\n\r\ntype SettingsControlProps = {\r\n  aboveControlsRef: HTMLDivElement | null,\r\n};\r\n\r\nconst SettingsControl: React.FC<SettingsControlProps> = ({ aboveControlsRef = null }) => {\r\n  const videoStore = React.useContext(VideoPlayerContext);\r\n  const popupState = usePopupState({ variant: 'popover', popupId: 'settingsMenu' });\r\n  const [selectedItemIndex, setSelectedItemIndex] = React.useState(3);\r\n  \r\n  let clampedMinMaxAvailableContainerHeight = 500;\r\n  if (aboveControlsRef) {\r\n    const clampedMaxAvailableContainerHeight = Math.min(aboveControlsRef.clientHeight - 10, 500);\r\n    clampedMinMaxAvailableContainerHeight = Math.max(50, clampedMaxAvailableContainerHeight);\r\n  }\r\n\r\n  const paperStyles = React.useMemo(() => ({\r\n    maxHeight: clampedMinMaxAvailableContainerHeight\r\n  }), [clampedMinMaxAvailableContainerHeight]);\r\n\r\n  const menuClasses = useMenuStyles();\r\n  const iconClasses = useIconStyles();\r\n\r\n  React.useEffect(() => {\r\n    if (!aboveControlsRef) return;\r\n\r\n    popupState.setAnchorEl(aboveControlsRef);\r\n  }, [popupState, aboveControlsRef]);\r\n\r\n  const makeOnMenuItemClick = React.useCallback((speed, index) => (event: React.SyntheticEvent) => {\r\n    setSelectedItemIndex(index);\r\n    videoStore.handlePlaybackSpeedChange(speed);\r\n    popupState.close();\r\n  }, [popupState, videoStore, setSelectedItemIndex]);\r\n\r\n  return (\r\n    <div>\r\n      <VideoControlButton \r\n        edge=\"end\"\r\n        aria-label=\"settings\" \r\n        {...bindToggle(popupState)}\r\n      >\r\n        <SettingsIcon />\r\n      </VideoControlButton>\r\n\r\n      <Menu \r\n        {...bindMenu(popupState)}\r\n        variant=\"menu\"\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={anchorOrigin}\r\n        transformOrigin={transformOrigin}\r\n        classes={menuClasses}\r\n        disablePortal={true}\r\n        keepMounted={true}\r\n        style={paperStyles}\r\n      >\r\n        <MenuItem \r\n          divider={true} \r\n        >\r\n          <ListItemText \r\n            primaryTypographyProps={listItemTypographyVariant} \r\n            primary=\"Playback Speed\"\r\n          />\r\n        </MenuItem>\r\n\r\n        { /* This loop is static, generated by a constant list so we can use hooks inside \r\n          since the order and number of hooks is the same every time */\r\n          playbackSpeeds.map((speed, index) => {\r\n            const textContent = (speed === 1) ? 'Normal' : speed.toString().padStart(3, ' ');\r\n            const isSelected = (selectedItemIndex === index);\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps, react-hooks/rules-of-hooks\r\n            const itemOnClick = React.useCallback(makeOnMenuItemClick(speed, index), [makeOnMenuItemClick]);\r\n\r\n            return (\r\n              <MenuItem\r\n                key={textContent}\r\n                onClick={itemOnClick}\r\n              >\r\n                <CheckIcon\r\n                  color=\"secondary\" \r\n                  classes={iconClasses} \r\n                  style={isSelected ? opacityOnStyle : opacityOffStyle }\r\n                />\r\n                <ListItemText\r\n                  primaryTypographyProps={listItemTypographyVariant} \r\n                  primary={textContent} \r\n                />\r\n              </MenuItem>\r\n            );\r\n          })\r\n        }\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(SettingsControl);","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\n\r\nimport VideoControlButton from './VideoControlButton';\r\nimport { VideoPlayerContext } from './VideoPlayer';\r\n\r\n\r\nconst FullScreenControl: React.FC<{}> = () => {\r\n  const videoStore = React.useContext(VideoPlayerContext);\r\n\r\n  return (\r\n    <VideoControlButton \r\n      onClick={videoStore.handleFullscreen}\r\n      aria-label=\"full-screen\"\r\n    >\r\n      {videoStore.fullscreenIsActive \r\n        ? <FullscreenExitIcon fontSize=\"large\"/> \r\n        : <FullscreenIcon fontSize=\"large\"/>\r\n      }\r\n    </VideoControlButton>\r\n  );\r\n};\r\n\r\nexport default observer(FullScreenControl);","import * as React from 'react';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\n\r\nimport VideoControlButton from './VideoControlButton';\r\nimport { VideoPlayerContext } from './VideoPlayer';\r\n\r\n\r\nconst PlaybackControl: React.FC<{}> = () => {\r\n  const videoStore = React.useContext(VideoPlayerContext);\r\n\r\n  return (\r\n    <VideoControlButton \r\n      onClick={videoStore.handlePlayPause} \r\n      edge=\"end\" \r\n      aria-label=\"play or pause\"\r\n    >\r\n      {(videoStore.videoIsPlaying)\r\n        ? <PauseIcon fontSize=\"large\"/> \r\n        : <PlayArrowIcon fontSize=\"large\"/>}\r\n    </VideoControlButton>\r\n  );\r\n};\r\n\r\nexport default observer(PlaybackControl);","import * as React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { observer } from 'mobx-react';\r\nimport clsx from 'clsx';\r\n\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\nimport PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled';\r\n\r\nimport { VideoPlayerContext } from './VideoPlayer';\r\n\r\n\r\nconst useFeedbackStyles = makeStyles({\r\n  actionFeedbackWrapper: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n    width: '100%',\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: 0,\r\n    left: 0,\r\n  },\r\n  backgroundMask: {\r\n    background: '#000a',\r\n  },\r\n  actionAnimationStart: {\r\n    fontSize: \"4rem\",\r\n    opacity: 0.5,\r\n  },\r\n  actionRestState: {\r\n    transition: 'all 0.5s ease-out',\r\n    fontSize: \"8rem\",\r\n    opacity: 0,\r\n  },\r\n});\r\n\r\nconst VideoClickFeedback: React.FC<{}> = () => {\r\n  const videoStore = React.useContext(VideoPlayerContext);\r\n  const classes = useFeedbackStyles();\r\n\r\n  const iconClasses = React.useMemo(() => ({ \r\n    root: videoStore.videoClickAnimationDisplaying \r\n      ? classes.actionAnimationStart \r\n      : classes.actionRestState \r\n  }), [videoStore.videoClickAnimationDisplaying, classes]);\r\n\r\n  const FeedbackIconType = (videoStore.videoIsPlaying)\r\n    ? PlayCircleFilledIcon \r\n    : PauseCircleFilledIcon;\r\n\r\n  return (\r\n    <div \r\n      className={clsx(\r\n        classes.actionFeedbackWrapper, \r\n        videoStore.seekIsPending && classes.backgroundMask\r\n      )}\r\n    >\r\n      <FeedbackIconType\r\n        classes={iconClasses}\r\n        color=\"secondary\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(VideoClickFeedback);","import * as React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { formatSecondsToTimeDuration } from '../utils/functions';\r\nimport { VideoPlayerContext } from './VideoPlayer';\r\n\r\n\r\nconst useContainerStyles = makeStyles((theme) => ({\r\n  top: {\r\n    paddingTop: theme.spacing(1),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nconst useTextStyles = makeStyles({\r\n  root: {\r\n    lineHeight: '100%',\r\n  },\r\n});\r\n\r\nconst ElapsedTime: React.FC<{}> = () => {\r\n  const videoStore = React.useContext(VideoPlayerContext);\r\n  const wrapperClasses = useContainerStyles();\r\n  const textClasses = useTextStyles();\r\n\r\n  return (\r\n    <div className={wrapperClasses.top}>\r\n      <Typography\r\n        classes={textClasses}\r\n        variant=\"body2\" \r\n        color=\"secondary\"\r\n      >\r\n        {`${formatSecondsToTimeDuration(videoStore.currentPositionSeconds)} \r\n          / ${formatSecondsToTimeDuration(videoStore.durationSeconds)}`}\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(ElapsedTime);","import * as React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { observer } from 'mobx-react';\r\nimport { flowResult } from 'mobx';\r\nimport clsx from 'clsx';\r\n\r\nimport VideoProgress from './VideoProgress';\r\nimport VolumeControl from './VolumeControl';\r\nimport SettingsControl from './SettingsControl';\r\nimport FullscreenControl from './FullscreenControl';\r\nimport PlaybackControl from './PlaybackControl';\r\nimport VideoClickFeedback from './VideoClickFeedback';\r\nimport ElapsedTime from './ElapsedTime';\r\nimport { VideoPlayerContext } from './VideoPlayer';\r\nimport { CancellablePromise } from 'mobx/dist/api/flow';\r\n\r\n\r\nconst useVideoStyles = makeStyles((theme) => ({\r\n  controlsRoot: {\r\n    height: '100%',\r\n    width: '100%',\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: 0,\r\n    left: 0,\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    marginBottom: theme.spacing(2),\r\n    padding: theme.spacing(0, 5),\r\n  },\r\n  aboveControls: {\r\n    flexGrow: 1,\r\n  },\r\n  controlsAndProgress: {\r\n    background: 'linear-gradient(0deg, #000a, transparent)',\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    height: '100%',\r\n    position: 'relative',\r\n    zIndex: 2,\r\n  },\r\n  controlsAndProgressActive: {\r\n    opacity: 1,\r\n  },\r\n  controlsAndProgressIdle: {\r\n    transition: 'all 0.2s linear',\r\n    opacity: 0,\r\n  },\r\n  cursorOn: {\r\n    cursor: 'auto',\r\n  },\r\n  cursorOff: {\r\n    transition: 'all 0.2s linear',\r\n    cursor: 'none',\r\n  },\r\n  controlGroup: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  }, \r\n}));\r\n\r\nconst VideoControls: React.FC<{}> = () => {\r\n  const classes = useVideoStyles();\r\n  const videoStore = React.useContext(VideoPlayerContext);\r\n  const pendingControlHideHandler = React.useRef<CancellablePromise<void> | null>(null);\r\n  const [aboveControlsRef, setAboveControlsRef] = React.useState<HTMLDivElement | null>(null);\r\n\r\n  const activateControlsHandler = React.useCallback(() => {\r\n    // Cancel any existing scheduled hiding of video controls \r\n    pendingControlHideHandler?.current?.cancel();\r\n\r\n    const pendingHideHandle = flowResult(videoStore.setUserAsActive());\r\n    pendingHideHandle.catch(() => null);\r\n    pendingControlHideHandler.current = pendingHideHandle;\r\n  }, [videoStore, pendingControlHideHandler]);\r\n\r\n  const hideControlsHandler = React.useCallback(() => {\r\n    // Cancel any existing scheduled hiding of video controls\r\n    pendingControlHideHandler?.current?.cancel();\r\n\r\n    videoStore.setUserAsIdle();\r\n  }, [videoStore, pendingControlHideHandler]);\r\n\r\n  return (\r\n    <div \r\n      onMouseLeave={hideControlsHandler}\r\n      onMouseEnter={activateControlsHandler}\r\n      onClick={activateControlsHandler}\r\n      onMouseMove={activateControlsHandler}\r\n      onTouchMove={activateControlsHandler}\r\n      onTouchStart={activateControlsHandler}\r\n      className={clsx(\r\n        classes.controlsRoot,\r\n        videoStore.userIsIdle ? classes.cursorOff : classes.cursorOn\r\n      )}\r\n    >\r\n      <VideoClickFeedback />\r\n\r\n      <div className={clsx(\r\n          classes.container,\r\n          videoStore.userIsIdle ? classes.controlsAndProgressIdle : classes.controlsAndProgressActive,\r\n        )}\r\n      >\r\n        <div \r\n          className={classes.aboveControls} \r\n          ref={setAboveControlsRef}\r\n          onClick={videoStore.handleVideoClick}\r\n        />\r\n\r\n        <div className={classes.controlsAndProgress}>\r\n          <VideoProgress />\r\n\r\n          <div className={classes.buttons}>\r\n            <div \r\n              className={classes.controlGroup}\r\n              onMouseLeave={videoStore.handleVolumeOnHoverExit}\r\n            >\r\n              <PlaybackControl />\r\n              <VolumeControl />\r\n              <ElapsedTime />\r\n            </div>\r\n\r\n            <div className={classes.controlGroup}>\r\n              <SettingsControl aboveControlsRef={aboveControlsRef} />\r\n              <FullscreenControl />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(VideoControls);","import { makeAutoObservable, configure } from 'mobx';\r\nimport fscreen from 'fscreen';\r\nimport { delayMsAsync, delayNextFrame } from '../utils/functions';\r\nimport { MouseEventHandler } from 'react';\r\n\r\nconfigure({\r\n  enforceActions: \"always\",\r\n  computedRequiresReaction: true,\r\n  reactionRequiresObservable: true,\r\n  observableRequiresReaction: true,\r\n  disableErrorBoundaries: true\r\n});\r\n\r\nclass VideoStore {\r\n  videoElement: HTMLVideoElement | null = null;\r\n  videoContainer: HTMLDivElement | null = null;\r\n  videoIsPlaying = false;\r\n  volumeLevel = 1;\r\n  volumeIsMuted = false;\r\n  currentPositionSeconds = 0;\r\n  durationSeconds = 0;\r\n  fullscreenIsActive = false;\r\n  videoClickAnimationDisplaying = false;\r\n  userIsIdle = false;\r\n  seekIsPending = false;\r\n  videoWasPlayingBeforeSeek = false;\r\n  seekHoverPositionPercent = 0;\r\n  previewPeekIsActive = false;\r\n  pointerIsHovering = false;\r\n  handleVideoClick = function*() { (yield Promise.resolve(0)) as void; };\r\n  setUserAsActive = function*() { (yield Promise.resolve(0)) as void; };\r\n\r\n  constructor() {\r\n    this.setInitialState();\r\n\r\n    makeAutoObservable(this, {\r\n      videoElement: false,\r\n      videoContainer: false,\r\n      setVideoElement: false,\r\n      cleanUp: false,\r\n      videoWasPlayingBeforeSeek: false,\r\n    });\r\n  }\r\n\r\n  setInitialState = () => {\r\n    this.videoIsPlaying = false;\r\n    this.volumeLevel = 1;\r\n    this.volumeIsMuted = false;\r\n    this.currentPositionSeconds = 0;\r\n    this.durationSeconds = 0;\r\n    this.fullscreenIsActive = false;\r\n    this.videoClickAnimationDisplaying = false;\r\n    this.userIsIdle = false;\r\n    this.seekIsPending = false;\r\n    this.videoWasPlayingBeforeSeek = false;\r\n    this.seekHoverPositionPercent = 0;\r\n    this.previewPeekIsActive = false;\r\n    this.pointerIsHovering = false;\r\n    this.handleVideoClick = this.handleVideoClickFlow.bind(this);\r\n    this.setUserAsActive = this.setUserAsActiveFlow.bind(this);\r\n  };\r\n\r\n  setVideoElement = (videoElement: HTMLVideoElement) => {\r\n    this.videoElement = videoElement;\r\n    if (videoElement) {\r\n      videoElement.addEventListener('loadedmetadata', this.updateDuration);\r\n      videoElement.addEventListener('ended', this.handleEnd);\r\n    }\r\n  };\r\n\r\n  setVideoContainer = (videoContainer: HTMLDivElement) => {\r\n    this.videoContainer = videoContainer;\r\n    fscreen.addEventListener('fullscreenchange', this.handleFullscreenChange);\r\n  };\r\n  \r\n  cleanUp = () => {\r\n    this.videoElement?.removeEventListener('loadedmetadata', this.updateDuration);\r\n    this.videoElement?.removeEventListener('ended', this.handleEnd);\r\n    this.videoContainer?.removeEventListener('fullscreenchange', this.handleFullscreenChange);\r\n\r\n    this.videoElement = null;\r\n    this.videoContainer = null;\r\n  };\r\n\r\n  setUserAsIdle = () => {\r\n    if (this.videoIsPlaying) {\r\n      this.userIsIdle = true;\r\n    }\r\n  };\r\n\r\n  handleEnd = () => {\r\n    this.videoIsPlaying = false;\r\n  };\r\n\r\n  updateTime = () => {\r\n    if (!this.videoElement) return;\r\n\r\n    // In some mobile browsers, when loadedmetadata is raised, if it is raised at all,\r\n    // the duration may not have the correct value, or even any value at all so we\r\n    // check again here\r\n    if (!this.durationSeconds) this.updateDuration();\r\n\r\n    this.currentPositionSeconds = this.videoElement.currentTime;\r\n\r\n    // While the video keeps playing we update the progress bar once for every rendered frame\r\n    if (!this.videoElement.paused && !this.videoElement.ended) {\r\n      window.requestAnimationFrame(this.updateTime);\r\n    }\r\n  };\r\n\r\n  updateDuration = (): void => {\r\n    if (!this.videoElement) return;\r\n\r\n    this.durationSeconds = Math.floor(this.videoElement.duration);\r\n  };\r\n\r\n  handlePlayPause = () => {\r\n    if (!this.videoElement) return;\r\n\r\n    if (this.videoElement.paused || this.videoElement.ended) {\r\n      this.videoElement.play();\r\n      this.videoIsPlaying = true;\r\n      this.updateTime();\r\n    } else {\r\n      this.videoElement.pause();\r\n      this.videoIsPlaying = false;\r\n    }\r\n  };\r\n\r\n  handlePreviewSeek: MouseEventHandler = (event) => {\r\n    const targetElement = event.currentTarget;\r\n    const { width, left } = targetElement.getBoundingClientRect();\r\n\r\n    if (!this.videoContainer || this.seekIsPending || width < 15) return;\r\n    this.seekHoverPositionPercent = (event.pageX - left) * 100 / width;\r\n  };\r\n\r\n  get seekHoverPositionSeconds(): number {\r\n    const hoverTime = this.seekHoverPositionPercent * this.durationSeconds / 100;\r\n    return this.seekIsPending ? this.currentPositionSeconds : hoverTime;\r\n  }\r\n\r\n  get seekHoverPositionPercentClamped(): number {\r\n    const currentTimePercent = this.currentPositionSeconds * 100 / this.durationSeconds;\r\n    const hoverPercent = this.seekIsPending ? currentTimePercent : this.seekHoverPositionPercent;\r\n    return Math.max(5, Math.min(hoverPercent, 95));\r\n  }\r\n\r\n  startPreviewSeek: MouseEventHandler = (event) => {\r\n    this.handlePreviewSeek(event);\r\n    this.previewPeekIsActive = true;\r\n  };\r\n\r\n  cancelPreviewSeek: MouseEventHandler = (event) => {\r\n    this.seekHoverPositionPercent = 0;\r\n    this.previewPeekIsActive = false;\r\n  };\r\n\r\n  handleSeek = (event: React.ChangeEvent<{}>, newTime: number | number[]): void => {\r\n    if (typeof newTime !== 'number') return;\r\n    if (!this.videoElement || !['mousedown', 'mouseup', 'mousemove'].includes(event.type)) return;\r\n\r\n    const isMouseDown = (event.type === 'mousedown');\r\n    const isMouseUp = (event.type === 'mouseup');\r\n\r\n    if (isMouseDown) {\r\n      if (!this.videoElement.paused && !this.videoElement.ended) {\r\n        this.videoElement.pause();\r\n        this.videoIsPlaying = false;\r\n        this.videoWasPlayingBeforeSeek = true;\r\n      } else {\r\n        this.videoWasPlayingBeforeSeek = false;\r\n      }\r\n      this.seekIsPending = true;\r\n    } else if (isMouseUp) {\r\n      if (this.videoWasPlayingBeforeSeek) {\r\n        this.videoElement.play();\r\n        this.videoIsPlaying = true;\r\n        this.updateTime();\r\n      }\r\n      this.seekIsPending = false;\r\n    }\r\n\r\n    // Update position on mouse down, up and move events\r\n    this.videoElement.currentTime = newTime;\r\n    this.currentPositionSeconds = newTime;\r\n  };\r\n\r\n  handleFullscreen = (): void => {\r\n    if (fscreen.fullscreenEnabled && this.videoContainer) {\r\n      if (this.fullscreenIsActive && fscreen.fullscreenElement) {\r\n        fscreen.exitFullscreen();\r\n      } else {\r\n        fscreen.requestFullscreen(this.videoContainer);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleFullscreenChange = (): void => {\r\n    if (fscreen.fullscreenEnabled && this.videoContainer) {\r\n      if (fscreen.fullscreenElement) {\r\n        this.fullscreenIsActive = true;\r\n        document.documentElement.style.fontSize = \"150%\";\r\n      } else {\r\n        this.fullscreenIsActive = false;\r\n        document.documentElement.style.fontSize = \"100%\";\r\n      }\r\n    }\r\n  };\r\n\r\n  handleVolumeChange = (event: React.ChangeEvent<{}>, newVolume: number | number[]): void => {\r\n    if (typeof newVolume !== 'number') return;\r\n    if (!this.videoElement || newVolume < 0 || newVolume > 1 || !Number.isFinite(newVolume)) return;\r\n\r\n    this.videoElement.volume = newVolume;\r\n    this.volumeLevel = newVolume;\r\n  };\r\n\r\n  toggleVolume = (): void => {\r\n    if (!this.videoElement) return;\r\n    \r\n    this.volumeIsMuted = !this.volumeIsMuted;\r\n    this.videoElement.muted = this.volumeIsMuted;\r\n  };\r\n \r\n  handlePlaybackSpeedChange = (speed: number): void => {\r\n    if (!this.videoElement || speed < 0 || speed > 2 || !Number.isFinite(speed)) return;\r\n    \r\n    this.videoElement.playbackRate = speed;\r\n  };\r\n\r\n  handleVolumeOnHover = (): void => {\r\n    this.pointerIsHovering = true;\r\n  }\r\n\r\n  handleVolumeOnHoverExit = (): void => {\r\n    this.pointerIsHovering = false;\r\n  }\r\n\r\n  *handleVideoClickFlow(): Generator<Promise<number>, void, void> {\r\n    this.handlePlayPause();\r\n    this.videoClickAnimationDisplaying = true;\r\n    \r\n    yield delayNextFrame();\r\n    this.videoClickAnimationDisplaying = false;\r\n  };\r\n\r\n  *setUserAsActiveFlow(): Generator<Promise<number>, void, void> {\r\n    this.userIsIdle = false;\r\n\r\n    yield delayMsAsync(4000);\r\n    this.setUserAsIdle();\r\n  };\r\n}\r\n\r\nexport default VideoStore;","import * as React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport VideoControls from './VideoControls';\r\nimport VideoStore from '../store/VideoStore';\r\n\r\nconst useStyles = makeStyles({\r\n  videoContainer: {\r\n    position: 'relative',\r\n    border: '2px solid #555',\r\n  },\r\n  video: {\r\n    display: 'block',\r\n    objectFit: 'contain',\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nexport const VideoPlayerContext = React.createContext<VideoStore>(null!);\r\n\r\ntype VideoSource = {\r\n  url: string,\r\n  type: string,\r\n};\r\n\r\ntype VideoPlayerProps = {\r\n  posterUrl: string,\r\n  manualDownloadUrl: string,\r\n  sourceList: VideoSource[],\r\n}\r\n\r\nconst VideoPlayer: React.FC<VideoPlayerProps> = ({\r\n  posterUrl = '',\r\n  manualDownloadUrl = '',\r\n  sourceList = [],\r\n}) => {\r\n  const classes = useStyles();\r\n  const videoElementRef = React.useRef<HTMLVideoElement>(null!);\r\n  const videoContainerRef = React.useRef<HTMLDivElement>(null!);\r\n  const videoStoreRef = React.useRef<VideoStore | null>(null);\r\n\r\n  // Lazy initialization of a single videoStore instance per mounted component\r\n  const getStore = React.useCallback(() => {\r\n    if (!videoStoreRef.current) {\r\n      videoStoreRef.current = new VideoStore();\r\n    }\r\n\r\n    return videoStoreRef.current;\r\n  }, [videoStoreRef]);\r\n  \r\n  // Assign component refs required by the video store after rendering & DOM insertion\r\n  React.useEffect(() => {\r\n    const videoStore = getStore();\r\n\r\n    if (videoElementRef.current) {\r\n      videoStore.setVideoElement(videoElementRef.current);\r\n    }\r\n    \r\n    if (videoContainerRef.current) {\r\n      videoStore.setVideoContainer(videoContainerRef.current);\r\n    }\r\n    \r\n    return videoStore.cleanUp;\r\n  }, [getStore]);\r\n  \r\n  // Reset store state if the video component props change\r\n  React.useEffect(() => {\r\n    const videoStore = getStore();\r\n    videoStore.setInitialState();\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={classes.videoContainer}\r\n      ref={videoContainerRef}\r\n    >\r\n      <VideoPlayerContext.Provider value={getStore()} >\r\n        <video\r\n          id=\"video\"\r\n          ref={videoElementRef}\r\n          className={classes.video}\r\n          preload=\"metadata\"\r\n          poster={posterUrl}\r\n        >\r\n          {sourceList.map(source => {\r\n            const { url, type } = source;\r\n            return (\r\n              <source key={url} src={url} type={type} />\r\n            );\r\n          })}\r\n\r\n          <a href={manualDownloadUrl}>Download Video</a>\r\n        </video>\r\n\r\n        <VideoControls />\r\n      </VideoPlayerContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoPlayer;","import * as React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport VideoPlayer from './components/VideoPlayer';\n\nconst useStyles = makeStyles((theme) => ({\n  topContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  videoContainer: {\n    margin: theme.spacing(15, 'auto'),\n    height: 360,\n    width: 640,\n  },\n  title: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n}));\n\n\nconst App: React.FC<{}> = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.topContainer}>\n      <div className={classes.videoContainer}>\n        <VideoPlayer \n          posterUrl={process.env.PUBLIC_URL + \"/preview/video.jpg\"}\n          manualDownloadUrl={process.env.PUBLIC_URL + \"/video/video.mp4\"}\n          sourceList={[{\n              url: process.env.PUBLIC_URL + \"/video/video.mp4\",\n              type: \"video/mp4\",\n            }\n          ]}\n        />\n\n        <div className={classes.title}>\n          <Typography variant=\"h4\" gutterBottom>\n            Big Buck Bunny\n          </Typography>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { red } from '@material-ui/core/colors';\r\n// https://github.com/mui-org/material-ui/issues/13394 this suppresses a Strict Mode warning\r\nimport { unstable_createMuiStrictModeTheme as createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      '@global': {\r\n        /* The emerging W3C standard that is currently Firefox-only */\r\n        '*': {\r\n          scrollbarColor: '#424242 #8e8e8e',\r\n        },\r\n        /* Works on Chrome/Edge/Safari */\r\n        '*::-webkit-scrollbar': {\r\n          width: 10,\r\n        },\r\n        '*::-webkit-scrollbar-track': {\r\n          background: '#424242',\r\n        },\r\n        '*::-webkit-scrollbar-thumb': {\r\n          backgroundColor: '#8e8e8e',\r\n          borderRadius: 4,\r\n        }\r\n      }\r\n    }\r\n  },\r\n  spacing: 4,\r\n  palette: {\r\n    primary: {\r\n      main: '#ff5722',\r\n    },\r\n    secondary: {\r\n      main: '#ffffff',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#ccbfa0',\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}